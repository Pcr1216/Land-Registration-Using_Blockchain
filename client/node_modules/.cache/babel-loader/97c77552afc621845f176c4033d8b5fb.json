{"ast":null,"code":"var _jsxFileName = \"D:\\\\BE COMP SS\\\\Final Year Project\\\\5\\\\land2\\\\land2\\\\client\\\\src\\\\components\\\\ThemeWrapper\\\\ThemeWrapper.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { ThemeContext, themes } from \"../../contexts/ThemeContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ThemeContextWrapper(props) {\n  _s();\n\n  const [theme, setTheme] = useState(themes.light);\n\n  function changeTheme(theme) {\n    setTheme(theme);\n  }\n\n  useEffect(() => {\n    switch (theme) {\n      case themes.light:\n        document.body.classList.add(\"white-content\");\n        break;\n\n      case themes.dark:\n      default:\n        document.body.classList.remove(\"white-content\");\n        break;\n    }\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme: theme,\n      changeTheme: changeTheme\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ThemeContextWrapper, \"tJ9/z9XCwc8lc62fZA0WUeB+MVw=\");\n\n_c = ThemeContextWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeContextWrapper\");","map":{"version":3,"sources":["D:/BE COMP SS/Final Year Project/5/land2/land2/client/src/components/ThemeWrapper/ThemeWrapper.js"],"names":["React","useState","useEffect","ThemeContext","themes","ThemeContextWrapper","props","theme","setTheme","light","changeTheme","document","body","classList","add","dark","remove","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,YAAT,EAAuBC,MAAvB,QAAqC,6BAArC;;AAEA,eAAe,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA;;AACjD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAACG,MAAM,CAACK,KAAR,CAAlC;;AAEA,WAASC,WAAT,CAAqBH,KAArB,EAA4B;AAC1BC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;;AAEDL,EAAAA,SAAS,CAAC,MAAM;AACd,YAAQK,KAAR;AACE,WAAKH,MAAM,CAACK,KAAZ;AACEE,QAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,eAA5B;AACA;;AACF,WAAKV,MAAM,CAACW,IAAZ;AACA;AACEJ,QAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBG,MAAxB,CAA+B,eAA/B;AACA;AAPJ;AASD,GAVQ,EAUN,CAACT,KAAD,CAVM,CAAT;AAYA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAEA,KAAT;AAAgBG,MAAAA,WAAW,EAAEA;AAA7B,KAA9B;AAAA,cACGJ,KAAK,CAACW;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAxBuBZ,mB;;KAAAA,mB","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { ThemeContext, themes } from \"../../contexts/ThemeContext\";\r\n\r\nexport default function ThemeContextWrapper(props) {\r\n  const [theme, setTheme] = useState(themes.light);\r\n\r\n  function changeTheme(theme) {\r\n    setTheme(theme);\r\n  }\r\n\r\n  useEffect(() => {\r\n    switch (theme) {\r\n      case themes.light:\r\n        document.body.classList.add(\"white-content\");\r\n        break;\r\n      case themes.dark:\r\n      default:\r\n        document.body.classList.remove(\"white-content\");\r\n        break;\r\n    }\r\n  }, [theme]);\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme: theme, changeTheme: changeTheme }}>\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}