{"ast":null,"code":"var _jsxFileName = \"D:\\\\BE COMP SS\\\\Final Year Project\\\\5\\\\land2\\\\land2\\\\client\\\\src\\\\views\\\\OwnedLands.js\";\nimport { ContractData, LoadingContainer } from '@drizzle/react-components';\nimport { DrizzleProvider } from '@drizzle/react-plugin';\nimport React, { Component } from 'react';\nimport { Spinner } from 'react-bootstrap'; // reactstrap components\n\nimport { Card, CardBody, CardHeader, CardTitle, Col, Row, Table } from \"reactstrap\";\nimport Land from \"../artifacts/Land.json\";\nimport getWeb3 from \"../getWeb3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst drizzleOptions = {\n  contracts: [Land]\n};\nvar verified;\nvar row = [];\n\nclass OwnedLands extends Component {\n  constructor(props) {\n    super(props);\n\n    this.viewImage = landId => {\n      alert(landId);\n      this.props.history.push({\n        pathname: '/viewImage'\n      });\n    };\n\n    this.componentDidMount = async () => {\n      //For refreshing page only once\n      if (!window.location.hash) {\n        window.location = window.location + '#loaded';\n        window.location.reload();\n      }\n\n      try {\n        //Get network provider and web3 instance\n        const web3 = await getWeb3();\n        const accounts = await web3.eth.getAccounts();\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = Land.networks[networkId];\n        const instance = new web3.eth.Contract(Land.abi, deployedNetwork && deployedNetwork.address);\n        const currentAddress = await web3.currentProvider.selectedAddress;\n        console.log(currentAddress);\n        this.setState({\n          LandInstance: instance,\n          web3: web3,\n          account: accounts[0]\n        });\n        verified = await this.state.LandInstance.methods.isVerified(currentAddress).call();\n        console.log(verified);\n        this.setState({\n          verified: verified\n        });\n        var registered = await this.state.LandInstance.methods.isBuyer(currentAddress).call();\n        console.log(registered);\n        this.setState({\n          registered: registered\n        });\n        var count = await this.state.LandInstance.methods.getLandsCount().call();\n        count = parseInt(count);\n        console.log(typeof count);\n        console.log(count); //this.setState({count:count});\n\n        var rowsArea = [];\n        var rowsCity = [];\n        var rowsState = [];\n        var rowsPrice = [];\n        var rowsPID = [];\n        var rowsSurvey = [];\n        var rowsIpfs = [];\n\n        for (var i = 1; i < count + 1; i++) {\n          rowsArea.push( /*#__PURE__*/_jsxDEV(ContractData, {\n            contract: \"Land\",\n            method: \"getArea\",\n            methodArgs: [i, {\n              from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\"\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 23\n          }, this));\n          rowsCity.push( /*#__PURE__*/_jsxDEV(ContractData, {\n            contract: \"Land\",\n            method: \"getCity\",\n            methodArgs: [i, {\n              from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\"\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 23\n          }, this));\n          rowsState.push( /*#__PURE__*/_jsxDEV(ContractData, {\n            contract: \"Land\",\n            method: \"getState\",\n            methodArgs: [i, {\n              from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\"\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 24\n          }, this));\n          rowsPrice.push( /*#__PURE__*/_jsxDEV(ContractData, {\n            contract: \"Land\",\n            method: \"getPrice\",\n            methodArgs: [i, {\n              from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\"\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 24\n          }, this));\n          rowsPID.push( /*#__PURE__*/_jsxDEV(ContractData, {\n            contract: \"Land\",\n            method: \"getPID\",\n            methodArgs: [i, {\n              from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\"\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 22\n          }, this));\n          rowsSurvey.push( /*#__PURE__*/_jsxDEV(ContractData, {\n            contract: \"Land\",\n            method: \"getSurveyNumber\",\n            methodArgs: [i, {\n              from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\"\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this));\n        }\n\n        for (i = 0; i < count; i++) {\n          var owner = await this.state.LandInstance.methods.getLandOwner(i + 1).call();\n          console.log(owner.toLowerCase());\n          console.log(currentAddress);\n\n          if (owner.toLowerCase() === currentAddress) {\n            row.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: i + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 24\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: rowsArea[i]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 40\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: rowsCity[i]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 62\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: rowsState[i]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 84\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: rowsPrice[i]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 107\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: rowsPID[i]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 130\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: rowsSurvey[i]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 151\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 20\n            }, this));\n          }\n        }\n\n        console.log(row);\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n        console.error(error);\n      }\n    };\n\n    this.state = {\n      LandInstance: undefined,\n      account: null,\n      web3: null,\n      flag: null,\n      verified: '',\n      registered: '',\n      count: 0,\n      id: ''\n    };\n  }\n\n  render() {\n    if (!this.state.web3) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: /*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\",\n              variant: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (!this.state.registered) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xs: \"6\",\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                className: \"card-chart\",\n                children: /*#__PURE__*/_jsxDEV(CardBody, {\n                  children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: \"You are not verified to view this page\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(DrizzleProvider, {\n          options: drizzleOptions,\n          children: /*#__PURE__*/_jsxDEV(LoadingContainer, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                lg: \"12\",\n                md: \"12\",\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                    children: /*#__PURE__*/_jsxDEV(CardTitle, {\n                      tag: \"h4\",\n                      children: \"Owned Lands\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 169,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n                    children: /*#__PURE__*/_jsxDEV(Table, {\n                      className: \"tablesorter\",\n                      responsive: true,\n                      color: \"black\",\n                      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                        className: \"text-primary\",\n                        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"#\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 176,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"Area\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 177,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"City\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 178,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"State\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 179,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"Price\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 180,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"Property PID\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 181,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"Survey Number\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 182,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 175,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 174,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                        children: row\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 185,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 173,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default OwnedLands;","map":{"version":3,"sources":["D:/BE COMP SS/Final Year Project/5/land2/land2/client/src/views/OwnedLands.js"],"names":["ContractData","LoadingContainer","DrizzleProvider","React","Component","Spinner","Card","CardBody","CardHeader","CardTitle","Col","Row","Table","Land","getWeb3","drizzleOptions","contracts","verified","row","OwnedLands","constructor","props","viewImage","landId","alert","history","push","pathname","componentDidMount","window","location","hash","reload","web3","accounts","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","instance","Contract","abi","address","currentAddress","currentProvider","selectedAddress","console","log","setState","LandInstance","account","state","methods","isVerified","call","registered","isBuyer","count","getLandsCount","parseInt","rowsArea","rowsCity","rowsState","rowsPrice","rowsPID","rowsSurvey","rowsIpfs","i","from","owner","getLandOwner","toLowerCase","error","undefined","flag","id","render"],"mappings":"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","sourcesContent":["import {\r\n  ContractData, LoadingContainer\r\n} from '@drizzle/react-components';\r\nimport { DrizzleProvider } from '@drizzle/react-plugin';\r\nimport React, { Component } from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n// reactstrap components\r\nimport {\r\n  Card, CardBody, CardHeader, CardTitle, Col, Row, Table\r\n} from \"reactstrap\";\r\nimport Land from \"../artifacts/Land.json\";\r\nimport getWeb3 from \"../getWeb3\";\r\n\r\n\r\n\r\n\r\nconst drizzleOptions = {\r\n  contracts: [Land]\r\n}\r\n\r\n\r\nvar verified;\r\nvar row = [];\r\n\r\n\r\nclass OwnedLands extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      LandInstance: undefined,\r\n      account: null,\r\n      web3: null,\r\n      flag: null,\r\n      verified: '',\r\n      registered: '',\r\n      count: 0,\r\n      id: '',\r\n    }\r\n  }\r\n\r\n  viewImage = (landId) => {\r\n    alert(landId);\r\n    this.props.history.push({\r\n      pathname: '/viewImage',\r\n    })\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    //For refreshing page only once\r\n    if (!window.location.hash) {\r\n      window.location = window.location + '#loaded';\r\n      window.location.reload();\r\n    }\r\n\r\n    try {\r\n      //Get network provider and web3 instance\r\n      const web3 = await getWeb3();\r\n\r\n      const accounts = await web3.eth.getAccounts();\r\n\r\n      const networkId = await web3.eth.net.getId();\r\n      const deployedNetwork = Land.networks[networkId];\r\n      const instance = new web3.eth.Contract(\r\n        Land.abi,\r\n        deployedNetwork && deployedNetwork.address,\r\n      );\r\n\r\n      const currentAddress = await web3.currentProvider.selectedAddress;\r\n      console.log(currentAddress);\r\n      this.setState({ LandInstance: instance, web3: web3, account: accounts[0] });\r\n      verified = await this.state.LandInstance.methods.isVerified(currentAddress).call();\r\n      console.log(verified);\r\n      this.setState({ verified: verified });\r\n      var registered = await this.state.LandInstance.methods.isBuyer(currentAddress).call();\r\n      console.log(registered);\r\n      this.setState({ registered: registered });\r\n\r\n      var count = await this.state.LandInstance.methods.getLandsCount().call();\r\n      count = parseInt(count);\r\n      console.log(typeof (count));\r\n      console.log(count);\r\n      //this.setState({count:count});\r\n\r\n      var rowsArea = [];\r\n      var rowsCity = [];\r\n      var rowsState = [];\r\n      var rowsPrice = [];\r\n      var rowsPID = [];\r\n      var rowsSurvey = [];\r\n      var rowsIpfs = []\r\n\r\n\r\n      for (var i = 1; i < count + 1; i++) {\r\n        rowsArea.push(<ContractData contract=\"Land\" method=\"getArea\" methodArgs={[i, { from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\" }]} />);\r\n        rowsCity.push(<ContractData contract=\"Land\" method=\"getCity\" methodArgs={[i, { from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\" }]} />);\r\n        rowsState.push(<ContractData contract=\"Land\" method=\"getState\" methodArgs={[i, { from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\" }]} />);\r\n        rowsPrice.push(<ContractData contract=\"Land\" method=\"getPrice\" methodArgs={[i, { from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\" }]} />);\r\n        rowsPID.push(<ContractData contract=\"Land\" method=\"getPID\" methodArgs={[i, { from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\" }]} />);\r\n        rowsSurvey.push(<ContractData contract=\"Land\" method=\"getSurveyNumber\" methodArgs={[i, { from: \"0xa42A8B478E5e010609725C2d5A8fe6c0C4A939cB\" }]} />);\r\n      }\r\n\r\n\r\n      for ( i = 0; i < count; i++) {\r\n        var owner = await this.state.LandInstance.methods.getLandOwner(i + 1).call();\r\n        console.log(owner.toLowerCase());\r\n        console.log(currentAddress);\r\n        if (owner.toLowerCase() === currentAddress) {\r\n          row.push(<tr><td>{i + 1}</td><td>{rowsArea[i]}</td><td>{rowsCity[i]}</td><td>{rowsState[i]}</td><td>{rowsPrice[i]}</td><td>{rowsPID[i]}</td><td>{rowsSurvey[i]}</td>\r\n          </tr>)\r\n        }\r\n      }\r\n      console.log(row);\r\n\r\n    } catch (error) {\r\n      // Catch any errors for any of the above operations.\r\n      alert(\r\n        `Failed to load web3, accounts, or contract. Check console for details.`,\r\n      );\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (!this.state.web3) {\r\n      return (\r\n        <div>\r\n          <div>\r\n            <h1>\r\n              <Spinner animation=\"border\" variant=\"primary\" />\r\n            </h1>\r\n          </div>\r\n\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (!this.state.registered) {\r\n      return (\r\n        <div className=\"content\">\r\n          <div>\r\n            <Row>\r\n              <Col xs=\"6\">\r\n                <Card className=\"card-chart\">\r\n                  <CardBody>\r\n                    <h1>\r\n                      You are not verified to view this page\r\n                    </h1>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n\r\n        </div>\r\n      );\r\n    }\r\n\r\n\r\n    return (\r\n      <>\r\n        <div className=\"content\">\r\n          <DrizzleProvider options={drizzleOptions}>\r\n            <LoadingContainer>\r\n              <Row>\r\n                <Col lg=\"12\" md=\"12\">\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle tag=\"h4\">Owned Lands\r\n                      </CardTitle>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                      <Table className=\"tablesorter\" responsive color=\"black\">\r\n                        <thead className=\"text-primary\">\r\n                          <tr>\r\n                            <th>#</th>\r\n                            <th>Area</th>\r\n                            <th>City</th>\r\n                            <th>State</th>\r\n                            <th>Price</th>\r\n                            <th>Property PID</th>\r\n                            <th>Survey Number</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {row}\r\n                        </tbody>\r\n                      </Table>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n            </LoadingContainer>\r\n          </DrizzleProvider>\r\n        </div>\r\n      </>\r\n\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default OwnedLands;"]},"metadata":{},"sourceType":"module"}