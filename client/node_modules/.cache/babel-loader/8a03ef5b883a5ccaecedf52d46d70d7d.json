{"ast":null,"code":"'use strict';\n\nfunction requireCommands() {\n  const cmds = {\n    // Files Regular (not MFS)\n    add: require('../files-regular/add'),\n    addReadableStream: require('../files-regular/add-readable-stream'),\n    addPullStream: require('../files-regular/add-pull-stream'),\n    addFromFs: require('../files-regular/add-from-fs'),\n    addFromURL: require('../files-regular/add-from-url'),\n    addFromStream: require('../files-regular/add'),\n    cat: require('../files-regular/cat'),\n    catReadableStream: require('../files-regular/cat-readable-stream'),\n    catPullStream: require('../files-regular/cat-pull-stream'),\n    get: require('../files-regular/get'),\n    getReadableStream: require('../files-regular/get-readable-stream'),\n    getPullStream: require('../files-regular/get-pull-stream'),\n    ls: require('../files-regular/ls'),\n    lsReadableStream: require('../files-regular/ls-readable-stream'),\n    lsPullStream: require('../files-regular/ls-pull-stream'),\n    // Block\n    block: require('../block'),\n    bitswap: require('../bitswap'),\n    // Graph\n    dag: require('../dag'),\n    object: require('../object'),\n    pin: require('../pin'),\n    // Network\n    bootstrap: require('../bootstrap'),\n    dht: require('../dht'),\n    name: require('../name'),\n    ping: require('../ping'),\n    pingReadableStream: require('../ping-readable-stream'),\n    pingPullStream: require('../ping-pull-stream'),\n    swarm: require('../swarm'),\n    pubsub: require('../pubsub'),\n    dns: require('../dns'),\n    // Miscellaneous\n    commands: require('../commands'),\n    config: require('../config'),\n    diag: require('../diag'),\n    id: require('../id'),\n    key: require('../key'),\n    log: require('../log'),\n    mount: require('../mount'),\n    refs: require('../refs'),\n    repo: require('../repo'),\n    stop: require('../stop'),\n    stats: require('../stats'),\n    update: require('../update'),\n    version: require('../version'),\n    types: require('../types'),\n    resolve: require('../resolve')\n  }; // shutdown is an alias for stop\n\n  cmds.shutdown = cmds.stop; // Files MFS (Mutable Filesystem)\n\n  cmds.files = send => {\n    return require('../files-mfs')(send);\n  };\n\n  cmds.util = (send, config) => {\n    return {\n      getEndpointConfig: require('../util/get-endpoint-config')(config),\n      crypto: require('libp2p-crypto'),\n      isIPFS: require('is-ipfs')\n    };\n  };\n\n  return cmds;\n}\n\nfunction loadCommands(send, config) {\n  const files = requireCommands();\n  const cmds = {};\n  Object.keys(files).forEach(file => {\n    cmds[file] = files[file](send, config);\n  });\n  return cmds;\n}\n\nmodule.exports = loadCommands;","map":{"version":3,"sources":["D:/BE COMP SS/Final Year Project/5/land2/land2/client/node_modules/ipfs-http-client/src/utils/load-commands.js"],"names":["requireCommands","cmds","add","require","addReadableStream","addPullStream","addFromFs","addFromURL","addFromStream","cat","catReadableStream","catPullStream","get","getReadableStream","getPullStream","ls","lsReadableStream","lsPullStream","block","bitswap","dag","object","pin","bootstrap","dht","name","ping","pingReadableStream","pingPullStream","swarm","pubsub","dns","commands","config","diag","id","key","log","mount","refs","repo","stop","stats","update","version","types","resolve","shutdown","files","send","util","getEndpointConfig","crypto","isIPFS","loadCommands","Object","keys","forEach","file","module","exports"],"mappings":"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","sourcesContent":["'use strict'\n\nfunction requireCommands () {\n  const cmds = {\n    // Files Regular (not MFS)\n    add: require('../files-regular/add'),\n    addReadableStream: require('../files-regular/add-readable-stream'),\n    addPullStream: require('../files-regular/add-pull-stream'),\n    addFromFs: require('../files-regular/add-from-fs'),\n    addFromURL: require('../files-regular/add-from-url'),\n    addFromStream: require('../files-regular/add'),\n    cat: require('../files-regular/cat'),\n    catReadableStream: require('../files-regular/cat-readable-stream'),\n    catPullStream: require('../files-regular/cat-pull-stream'),\n    get: require('../files-regular/get'),\n    getReadableStream: require('../files-regular/get-readable-stream'),\n    getPullStream: require('../files-regular/get-pull-stream'),\n    ls: require('../files-regular/ls'),\n    lsReadableStream: require('../files-regular/ls-readable-stream'),\n    lsPullStream: require('../files-regular/ls-pull-stream'),\n\n    // Block\n    block: require('../block'),\n    bitswap: require('../bitswap'),\n\n    // Graph\n    dag: require('../dag'),\n    object: require('../object'),\n    pin: require('../pin'),\n\n    // Network\n    bootstrap: require('../bootstrap'),\n    dht: require('../dht'),\n    name: require('../name'),\n    ping: require('../ping'),\n    pingReadableStream: require('../ping-readable-stream'),\n    pingPullStream: require('../ping-pull-stream'),\n    swarm: require('../swarm'),\n    pubsub: require('../pubsub'),\n    dns: require('../dns'),\n\n    // Miscellaneous\n    commands: require('../commands'),\n    config: require('../config'),\n    diag: require('../diag'),\n    id: require('../id'),\n    key: require('../key'),\n    log: require('../log'),\n    mount: require('../mount'),\n    refs: require('../refs'),\n    repo: require('../repo'),\n    stop: require('../stop'),\n    stats: require('../stats'),\n    update: require('../update'),\n    version: require('../version'),\n    types: require('../types'),\n    resolve: require('../resolve')\n  }\n\n  // shutdown is an alias for stop\n  cmds.shutdown = cmds.stop\n\n  // Files MFS (Mutable Filesystem)\n  cmds.files = (send) => {\n    return require('../files-mfs')(send)\n  }\n\n  cmds.util = (send, config) => {\n    return {\n      getEndpointConfig: require('../util/get-endpoint-config')(config),\n      crypto: require('libp2p-crypto'),\n      isIPFS: require('is-ipfs')\n    }\n  }\n\n  return cmds\n}\n\nfunction loadCommands (send, config) {\n  const files = requireCommands()\n  const cmds = {}\n\n  Object.keys(files).forEach((file) => {\n    cmds[file] = files[file](send, config)\n  })\n\n  return cmds\n}\n\nmodule.exports = loadCommands\n"]},"metadata":{},"sourceType":"script"}