{"ast":null,"code":"'use strict';\n\nconst DAGLink = require('./../dag-link');\n\nconst {\n  cid\n} = require('../util');\n\nexports = module.exports;\n\nfunction cloneData(dagNode) {\n  let data;\n\n  if (dagNode.data && dagNode.data.length > 0) {\n    data = Buffer.alloc(dagNode.data.length);\n    dagNode.data.copy(data);\n  } else {\n    data = Buffer.alloc(0);\n  }\n\n  return data;\n}\n\nfunction cloneLinks(dagNode) {\n  return dagNode.links.slice();\n}\n\nfunction linkSort(a, b) {\n  return Buffer.compare(a.nameAsBuffer, b.nameAsBuffer);\n}\n/*\n * toDAGLink converts a DAGNode to a DAGLink\n */\n\n\nfunction toDAGLink(node, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  cid(node, options, (error, cid) => {\n    if (error) {\n      return callback(error);\n    }\n\n    callback(null, new DAGLink(options.name || '', node.size, cid));\n  });\n}\n\nexports.cloneData = cloneData;\nexports.cloneLinks = cloneLinks;\nexports.linkSort = linkSort;\nexports.toDAGLink = toDAGLink;","map":{"version":3,"sources":["D:/BE COMP SS/Final Year Project/5/land2/land2/client/node_modules/ipld-dag-pb/src/dag-node/util.js"],"names":["DAGLink","require","cid","exports","module","cloneData","dagNode","data","length","Buffer","alloc","copy","cloneLinks","links","slice","linkSort","a","b","compare","nameAsBuffer","toDAGLink","node","options","callback","error","name","size"],"mappings":"AAAA;;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAAC,eAAD,CAAvB;;AACA,MAAM;AACJC,EAAAA;AADI,IAEFD,OAAO,CAAC,SAAD,CAFX;;AAIAE,OAAO,GAAGC,MAAM,CAACD,OAAjB;;AAEA,SAASE,SAAT,CAAoBC,OAApB,EAA6B;AAC3B,MAAIC,IAAJ;;AAEA,MAAID,OAAO,CAACC,IAAR,IAAgBD,OAAO,CAACC,IAAR,CAAaC,MAAb,GAAsB,CAA1C,EAA6C;AAC3CD,IAAAA,IAAI,GAAGE,MAAM,CAACC,KAAP,CAAaJ,OAAO,CAACC,IAAR,CAAaC,MAA1B,CAAP;AACAF,IAAAA,OAAO,CAACC,IAAR,CAAaI,IAAb,CAAkBJ,IAAlB;AACD,GAHD,MAGO;AACLA,IAAAA,IAAI,GAAGE,MAAM,CAACC,KAAP,CAAa,CAAb,CAAP;AACD;;AAED,SAAOH,IAAP;AACD;;AAED,SAASK,UAAT,CAAqBN,OAArB,EAA8B;AAC5B,SAAOA,OAAO,CAACO,KAAR,CAAcC,KAAd,EAAP;AACD;;AAED,SAASC,QAAT,CAAmBC,CAAnB,EAAsBC,CAAtB,EAAyB;AACvB,SAAOR,MAAM,CAACS,OAAP,CAAeF,CAAC,CAACG,YAAjB,EAA+BF,CAAC,CAACE,YAAjC,CAAP;AACD;AAED;AACA;AACA;;;AACA,SAASC,SAAT,CAAoBC,IAApB,EAA0BC,OAA1B,EAAmCC,QAAnC,EAA6C;AAC3C,MAAI,OAAOD,OAAP,KAAmB,UAAvB,EAAmC;AACjCC,IAAAA,QAAQ,GAAGD,OAAX;AACAA,IAAAA,OAAO,GAAG,EAAV;AACD;;AAEDpB,EAAAA,GAAG,CAACmB,IAAD,EAAOC,OAAP,EAAgB,CAACE,KAAD,EAAQtB,GAAR,KAAgB;AACjC,QAAIsB,KAAJ,EAAW;AACT,aAAOD,QAAQ,CAACC,KAAD,CAAf;AACD;;AAEDD,IAAAA,QAAQ,CAAC,IAAD,EAAO,IAAIvB,OAAJ,CAAYsB,OAAO,CAACG,IAAR,IAAgB,EAA5B,EAAgCJ,IAAI,CAACK,IAArC,EAA2CxB,GAA3C,CAAP,CAAR;AACD,GANE,CAAH;AAOD;;AAEDC,OAAO,CAACE,SAAR,GAAoBA,SAApB;AACAF,OAAO,CAACS,UAAR,GAAqBA,UAArB;AACAT,OAAO,CAACY,QAAR,GAAmBA,QAAnB;AACAZ,OAAO,CAACiB,SAAR,GAAoBA,SAApB","sourcesContent":["'use strict'\n\nconst DAGLink = require('./../dag-link')\nconst {\n  cid\n} = require('../util')\n\nexports = module.exports\n\nfunction cloneData (dagNode) {\n  let data\n\n  if (dagNode.data && dagNode.data.length > 0) {\n    data = Buffer.alloc(dagNode.data.length)\n    dagNode.data.copy(data)\n  } else {\n    data = Buffer.alloc(0)\n  }\n\n  return data\n}\n\nfunction cloneLinks (dagNode) {\n  return dagNode.links.slice()\n}\n\nfunction linkSort (a, b) {\n  return Buffer.compare(a.nameAsBuffer, b.nameAsBuffer)\n}\n\n/*\n * toDAGLink converts a DAGNode to a DAGLink\n */\nfunction toDAGLink (node, options, callback) {\n  if (typeof options === 'function') {\n    callback = options\n    options = {}\n  }\n\n  cid(node, options, (error, cid) => {\n    if (error) {\n      return callback(error)\n    }\n\n    callback(null, new DAGLink(options.name || '', node.size, cid))\n  })\n}\n\nexports.cloneData = cloneData\nexports.cloneLinks = cloneLinks\nexports.linkSort = linkSort\nexports.toDAGLink = toDAGLink\n"]},"metadata":{},"sourceType":"script"}