{"ast":null,"code":"var _jsxFileName = \"D:\\\\BE COMP SS\\\\Final Year Project\\\\5\\\\land2\\\\land2\\\\client\\\\src\\\\views\\\\AddLand.js\";\nimport React, { Component } from 'react';\nimport LandContract from \"../artifacts/Land.json\";\nimport getWeb3 from \"../getWeb3\";\nimport ipfs from '../ipfs';\nimport { Button, Card, CardHeader, CardBody, CardFooter, CardText, FormGroup, Form, Input, Row, Col } from \"reactstrap\";\nimport { Spinner, FormFile } from 'react-bootstrap';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddLand extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      //For refreshing page only once\n      if (!window.location.hash) {\n        window.location = window.location + '#loaded';\n        window.location.reload();\n      }\n\n      try {\n        //Get network provider and web3 instance\n        const web3 = await getWeb3();\n        const accounts = await web3.eth.getAccounts();\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = LandContract.networks[networkId];\n        const instance = new web3.eth.Contract(LandContract.abi, deployedNetwork && deployedNetwork.address);\n        this.setState({\n          LandInstance: instance,\n          web3: web3,\n          account: accounts[0]\n        });\n        const currentAddress = await web3.currentProvider.selectedAddress;\n        console.log(currentAddress);\n        this.setState({\n          LandInstance: instance,\n          web3: web3,\n          account: accounts[0]\n        });\n        var verified = await this.state.LandInstance.methods.isVerified(currentAddress).call();\n        console.log(verified);\n        this.setState({\n          verified: verified\n        });\n        var registered = await this.state.LandInstance.methods.isSeller(currentAddress).call();\n        console.log(registered);\n        this.setState({\n          registered: registered\n        });\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n        console.error(error);\n      }\n    };\n\n    this.addimage = async () => {\n      // alert('In add image')\n      await ipfs.files.add(this.state.buffer, (error, result) => {\n        if (error) {\n          alert(error);\n          return;\n        }\n\n        alert(result[0].hash);\n        this.setState({\n          ipfsHash: result[0].hash\n        });\n        console.log('ipfsHash:', this.state.ipfsHash);\n      });\n    };\n\n    this.addDoc = async () => {\n      // alert('In add image')\n      await ipfs.files.add(this.state.buffer2, (error, result) => {\n        if (error) {\n          alert(error);\n          return;\n        }\n\n        alert(result[0].hash);\n        this.setState({\n          document: result[0].hash\n        });\n        console.log('document:', this.state.document);\n      });\n    };\n\n    this.addLand = async () => {\n      this.addimage();\n      this.addDoc(); // alert('After add image')\n\n      await new Promise(resolve => setTimeout(resolve, 15000));\n\n      if (this.state.area === '' || this.state.city === '' || this.state.stateLoc === '' || this.state.price === '' || this.state.propertyPID === '' || this.state.surveyNum === '') {\n        alert(\"All the fields are compulsory!\");\n      } else if (!Number(this.state.area) || !Number(this.state.price)) {\n        alert(\"Land area and Price of Land must be a number!\");\n      } else {\n        await this.state.LandInstance.methods.addLand(this.state.area, this.state.city, this.state.stateLoc, this.state.price, this.state.propertyPID, this.state.surveyNum, this.state.ipfsHash, this.state.document).send({\n          from: this.state.account,\n          gas: 2100000\n        }).then(response => {\n          this.props.history.push(\"/Seller/SellerDashboard\");\n        }); //Reload\n\n        window.location.reload(false);\n      }\n    };\n\n    this.updateArea = event => this.setState({\n      area: event.target.value\n    });\n\n    this.updateCity = event => this.setState({\n      city: event.target.value\n    });\n\n    this.updateState = event => this.setState({\n      stateLoc: event.target.value\n    });\n\n    this.updatePrice = event => this.setState({\n      price: event.target.value\n    });\n\n    this.updatePID = event => this.setState({\n      propertyPID: event.target.value\n    });\n\n    this.updateSurveyNum = event => this.setState({\n      surveyNum: event.target.value\n    });\n\n    this.state = {\n      LandInstance: undefined,\n      account: null,\n      web3: null,\n      area: '',\n      city: '',\n      stateLoc: '',\n      price: '',\n      lands: null,\n      verficationStatus: false,\n      verified: '',\n      registered: '',\n      buffer: null,\n      ipfsHash: '',\n      propertyPID: '',\n      surveyNum: '',\n      buffer2: null,\n      document: ''\n    };\n    this.captureFile = this.captureFile.bind(this);\n    this.addimage = this.addimage.bind(this);\n    this.captureDoc = this.captureDoc.bind(this);\n    this.addDoc = this.addDoc.bind(this);\n  }\n\n  captureFile(event) {\n    event.preventDefault();\n    const file = event.target.files[0];\n    const reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n\n    reader.onloadend = () => {\n      this.setState({\n        buffer: Buffer(reader.result)\n      });\n      console.log('buffer', this.state.buffer);\n    };\n\n    console.log('caoture file...');\n  }\n\n  captureDoc(event) {\n    event.preventDefault();\n    const file2 = event.target.files[0];\n    const reader2 = new window.FileReader();\n    reader2.readAsArrayBuffer(file2);\n\n    reader2.onloadend = () => {\n      this.setState({\n        buffer2: Buffer(reader2.result)\n      });\n      console.log('buffer2', this.state.buffer2);\n    };\n\n    console.log('caoture doc...');\n  }\n\n  render() {\n    if (!this.state.web3) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: /*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\",\n              variant: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (!this.state.registered || !this.state.verified) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xs: \"6\",\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                className: \"card-chart\",\n                children: /*#__PURE__*/_jsxDEV(CardBody, {\n                  children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: \"You are not verified to view this page\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"8\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"title\",\n                children: \"Add Land\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"12\",\n                    children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        children: \"Area (in sqm.)\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 242,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        placeholder: \"Area\",\n                        type: \"text\",\n                        value: this.state.area,\n                        onChange: this.updateArea\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 243,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"12\",\n                    children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        children: \"City\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 256,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        placeholder: \"City\",\n                        type: \"text\",\n                        value: this.state.city,\n                        onChange: this.updateCity\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 257,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 255,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"12\",\n                    children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        children: \"Country\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 269,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        placeholder: \"Country\",\n                        type: \"text\",\n                        value: this.state.stateLoc,\n                        onChange: this.updateState\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 270,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 268,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"12\",\n                    children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        children: \"Price\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 283,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        placeholder: \"Price\",\n                        type: \"text\",\n                        value: this.state.price,\n                        onChange: this.updatePrice\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 284,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 282,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"12\",\n                    children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        children: \"Property PID Number\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 296,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        placeholder: \"Property PID\",\n                        type: \"text\",\n                        value: this.state.propertyPID,\n                        onChange: this.updatePID\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 297,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 295,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"12\",\n                    children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        children: \"Physical Survey Number\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 309,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        placeholder: \"Survey Num\",\n                        type: \"text\",\n                        value: this.state.surveyNum,\n                        onChange: this.updateSurveyNum\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 310,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 308,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"12\",\n                    children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        children: \"Insert Land Image\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 322,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(FormFile, {\n                        id: \"File1\",\n                        onChange: this.captureFile\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 323,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 321,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"12\",\n                    children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        children: \"Insert ID card document\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 333,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(FormFile, {\n                        id: \"File2\",\n                        onChange: this.captureDoc\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 334,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 332,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 331,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-fill\",\n                color: \"primary\",\n                onClick: this.addLand,\n                children: \"Add Land\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default AddLand;","map":{"version":3,"sources":["D:/BE COMP SS/Final Year Project/5/land2/land2/client/src/views/AddLand.js"],"names":["React","Component","LandContract","getWeb3","ipfs","Button","Card","CardHeader","CardBody","CardFooter","CardText","FormGroup","Form","Input","Row","Col","Spinner","FormFile","AddLand","constructor","props","componentDidMount","window","location","hash","reload","web3","accounts","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","instance","Contract","abi","address","setState","LandInstance","account","currentAddress","currentProvider","selectedAddress","console","log","verified","state","methods","isVerified","call","registered","isSeller","error","alert","addimage","files","add","buffer","result","ipfsHash","addDoc","buffer2","document","addLand","Promise","resolve","setTimeout","area","city","stateLoc","price","propertyPID","surveyNum","Number","send","from","gas","then","response","history","push","updateArea","event","target","value","updateCity","updateState","updatePrice","updatePID","updateSurveyNum","undefined","lands","verficationStatus","captureFile","bind","captureDoc","preventDefault","file","reader","FileReader","readAsArrayBuffer","onloadend","Buffer","file2","reader2","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,SACEC,MADF,EAEEC,IAFF,EAGEC,UAHF,EAIEC,QAJF,EAKEC,UALF,EAMEC,QANF,EAOEC,SAPF,EAQEC,IARF,EASEC,KATF,EAUEC,GAVF,EAWEC,GAXF,QAYO,YAZP;AAaA,SAASC,OAAT,EAAoBC,QAApB,QAAmC,iBAAnC;AACA,OAAO,yDAAP;;;AAGA,MAAMC,OAAN,SAAsBjB,SAAtB,CAAgC;AAC9BkB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA4BnBC,iBA5BmB,GA4BC,YAAY;AAC9B;AACA,UAAI,CAACC,MAAM,CAACC,QAAP,CAAgBC,IAArB,EAA2B;AACzBF,QAAAA,MAAM,CAACC,QAAP,GAAkBD,MAAM,CAACC,QAAP,GAAkB,SAApC;AACAD,QAAAA,MAAM,CAACC,QAAP,CAAgBE,MAAhB;AACD;;AAED,UAAI;AACF;AACA,cAAMC,IAAI,GAAG,MAAMvB,OAAO,EAA1B;AAEA,cAAMwB,QAAQ,GAAG,MAAMD,IAAI,CAACE,GAAL,CAASC,WAAT,EAAvB;AAEA,cAAMC,SAAS,GAAG,MAAMJ,IAAI,CAACE,GAAL,CAASG,GAAT,CAAaC,KAAb,EAAxB;AACA,cAAMC,eAAe,GAAG/B,YAAY,CAACgC,QAAb,CAAsBJ,SAAtB,CAAxB;AACA,cAAMK,QAAQ,GAAG,IAAIT,IAAI,CAACE,GAAL,CAASQ,QAAb,CACflC,YAAY,CAACmC,GADE,EAEfJ,eAAe,IAAIA,eAAe,CAACK,OAFpB,CAAjB;AAKA,aAAKC,QAAL,CAAc;AAAEC,UAAAA,YAAY,EAAEL,QAAhB;AAA0BT,UAAAA,IAAI,EAAEA,IAAhC;AAAsCe,UAAAA,OAAO,EAAEd,QAAQ,CAAC,CAAD;AAAvD,SAAd;AACA,cAAMe,cAAc,GAAG,MAAMhB,IAAI,CAACiB,eAAL,CAAqBC,eAAlD;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,cAAZ;AACA,aAAKH,QAAL,CAAc;AAAEC,UAAAA,YAAY,EAAEL,QAAhB;AAA0BT,UAAAA,IAAI,EAAEA,IAAhC;AAAsCe,UAAAA,OAAO,EAAEd,QAAQ,CAAC,CAAD;AAAvD,SAAd;AACA,YAAIoB,QAAQ,GAAG,MAAM,KAAKC,KAAL,CAAWR,YAAX,CAAwBS,OAAxB,CAAgCC,UAAhC,CAA2CR,cAA3C,EAA2DS,IAA3D,EAArB;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACA,aAAKR,QAAL,CAAc;AAAEQ,UAAAA,QAAQ,EAAEA;AAAZ,SAAd;AACA,YAAIK,UAAU,GAAG,MAAM,KAAKJ,KAAL,CAAWR,YAAX,CAAwBS,OAAxB,CAAgCI,QAAhC,CAAyCX,cAAzC,EAAyDS,IAAzD,EAAvB;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAYM,UAAZ;AACA,aAAKb,QAAL,CAAc;AAAEa,UAAAA,UAAU,EAAEA;AAAd,SAAd;AAGD,OAzBD,CAyBE,OAAOE,KAAP,EAAc;AACd;AACAC,QAAAA,KAAK,CACF,wEADE,CAAL;AAGAV,QAAAA,OAAO,CAACS,KAAR,CAAcA,KAAd;AACD;AACF,KAnEkB;;AAAA,SAqEnBE,QArEmB,GAqER,YAAY;AACrB;AACA,YAAMpD,IAAI,CAACqD,KAAL,CAAWC,GAAX,CAAe,KAAKV,KAAL,CAAWW,MAA1B,EAAkC,CAACL,KAAD,EAAQM,MAAR,KAAmB;AACzD,YAAIN,KAAJ,EAAW;AACTC,UAAAA,KAAK,CAACD,KAAD,CAAL;AACA;AACD;;AAEDC,QAAAA,KAAK,CAACK,MAAM,CAAC,CAAD,CAAN,CAAUpC,IAAX,CAAL;AACA,aAAKe,QAAL,CAAc;AAAEsB,UAAAA,QAAQ,EAAED,MAAM,CAAC,CAAD,CAAN,CAAUpC;AAAtB,SAAd;AACAqB,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAKE,KAAL,CAAWa,QAApC;AACD,OATK,CAAN;AAUD,KAjFkB;;AAAA,SAkFnBC,MAlFmB,GAkFV,YAAY;AACnB;AACA,YAAM1D,IAAI,CAACqD,KAAL,CAAWC,GAAX,CAAe,KAAKV,KAAL,CAAWe,OAA1B,EAAmC,CAACT,KAAD,EAAQM,MAAR,KAAmB;AAC1D,YAAIN,KAAJ,EAAW;AACTC,UAAAA,KAAK,CAACD,KAAD,CAAL;AACA;AACD;;AAEDC,QAAAA,KAAK,CAACK,MAAM,CAAC,CAAD,CAAN,CAAUpC,IAAX,CAAL;AACA,aAAKe,QAAL,CAAc;AAAEyB,UAAAA,QAAQ,EAAEJ,MAAM,CAAC,CAAD,CAAN,CAAUpC;AAAtB,SAAd;AACAqB,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAKE,KAAL,CAAWgB,QAApC;AACD,OATK,CAAN;AAUD,KA9FkB;;AAAA,SAiGnBC,OAjGmB,GAiGT,YAAY;AACpB,WAAKT,QAAL;AACA,WAAKM,MAAL,GAFoB,CAGpB;;AACA,YAAM,IAAII,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAU,KAAV,CAAjC,CAAN;;AACA,UAAI,KAAKnB,KAAL,CAAWqB,IAAX,KAAoB,EAApB,IAA0B,KAAKrB,KAAL,CAAWsB,IAAX,KAAoB,EAA9C,IAAoD,KAAKtB,KAAL,CAAWuB,QAAX,KAAwB,EAA5E,IAAkF,KAAKvB,KAAL,CAAWwB,KAAX,KAAqB,EAAvG,IAA6G,KAAKxB,KAAL,CAAWyB,WAAX,KAA2B,EAAxI,IAA8I,KAAKzB,KAAL,CAAW0B,SAAX,KAAyB,EAA3K,EAA+K;AAC7KnB,QAAAA,KAAK,CAAC,gCAAD,CAAL;AACD,OAFD,MAEO,IAAK,CAACoB,MAAM,CAAC,KAAK3B,KAAL,CAAWqB,IAAZ,CAAR,IAA+B,CAACM,MAAM,CAAC,KAAK3B,KAAL,CAAWwB,KAAZ,CAA1C,EAA+D;AACpEjB,QAAAA,KAAK,CAAC,+CAAD,CAAL;AACD,OAFM,MAEA;AACL,cAAM,KAAKP,KAAL,CAAWR,YAAX,CAAwBS,OAAxB,CAAgCgB,OAAhC,CACJ,KAAKjB,KAAL,CAAWqB,IADP,EAEJ,KAAKrB,KAAL,CAAWsB,IAFP,EAGJ,KAAKtB,KAAL,CAAWuB,QAHP,EAIJ,KAAKvB,KAAL,CAAWwB,KAJP,EAKJ,KAAKxB,KAAL,CAAWyB,WALP,EAMJ,KAAKzB,KAAL,CAAW0B,SANP,EAOJ,KAAK1B,KAAL,CAAWa,QAPP,EAQJ,KAAKb,KAAL,CAAWgB,QARP,EASHY,IATG,CASE;AACJC,UAAAA,IAAI,EAAE,KAAK7B,KAAL,CAAWP,OADb;AAEJqC,UAAAA,GAAG,EAAE;AAFD,SATF,EAYDC,IAZC,CAYIC,QAAQ,IAAI;AAClB,eAAK5D,KAAL,CAAW6D,OAAX,CAAmBC,IAAnB,CAAwB,yBAAxB;AACD,SAdG,CAAN,CADK,CAiBL;;AACA5D,QAAAA,MAAM,CAACC,QAAP,CAAgBE,MAAhB,CAAuB,KAAvB;AACD;AACF,KA9HkB;;AAAA,SAiInB0D,UAjImB,GAiINC,KAAK,IAChB,KAAK7C,QAAL,CAAc;AAAE8B,MAAAA,IAAI,EAAEe,KAAK,CAACC,MAAN,CAAaC;AAArB,KAAd,CAlIiB;;AAAA,SAoInBC,UApImB,GAoINH,KAAK,IAChB,KAAK7C,QAAL,CAAc;AAAE+B,MAAAA,IAAI,EAAEc,KAAK,CAACC,MAAN,CAAaC;AAArB,KAAd,CArIiB;;AAAA,SAuInBE,WAvImB,GAuILJ,KAAK,IACjB,KAAK7C,QAAL,CAAc;AAAEgC,MAAAA,QAAQ,EAAEa,KAAK,CAACC,MAAN,CAAaC;AAAzB,KAAd,CAxIiB;;AAAA,SA0InBG,WA1ImB,GA0ILL,KAAK,IACjB,KAAK7C,QAAL,CAAc;AAAEiC,MAAAA,KAAK,EAAEY,KAAK,CAACC,MAAN,CAAaC;AAAtB,KAAd,CA3IiB;;AAAA,SA6InBI,SA7ImB,GA6IPN,KAAK,IACf,KAAK7C,QAAL,CAAc;AAAEkC,MAAAA,WAAW,EAAEW,KAAK,CAACC,MAAN,CAAaC;AAA5B,KAAd,CA9IiB;;AAAA,SAgJnBK,eAhJmB,GAgJDP,KAAK,IACrB,KAAK7C,QAAL,CAAc;AAAEmC,MAAAA,SAAS,EAAEU,KAAK,CAACC,MAAN,CAAaC;AAA1B,KAAd,CAjJiB;;AAGjB,SAAKtC,KAAL,GAAa;AACXR,MAAAA,YAAY,EAAEoD,SADH;AAEXnD,MAAAA,OAAO,EAAE,IAFE;AAGXf,MAAAA,IAAI,EAAE,IAHK;AAIX2C,MAAAA,IAAI,EAAE,EAJK;AAKXC,MAAAA,IAAI,EAAE,EALK;AAMXC,MAAAA,QAAQ,EAAE,EANC;AAOXC,MAAAA,KAAK,EAAE,EAPI;AAQXqB,MAAAA,KAAK,EAAE,IARI;AASXC,MAAAA,iBAAiB,EAAE,KATR;AAUX/C,MAAAA,QAAQ,EAAE,EAVC;AAWXK,MAAAA,UAAU,EAAE,EAXD;AAYXO,MAAAA,MAAM,EAAE,IAZG;AAaXE,MAAAA,QAAQ,EAAE,EAbC;AAcXY,MAAAA,WAAW,EAAE,EAdF;AAeXC,MAAAA,SAAS,EAAE,EAfA;AAgBXX,MAAAA,OAAO,EAAE,IAhBE;AAiBXC,MAAAA,QAAQ,EAAE;AAjBC,KAAb;AAmBA,SAAK+B,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKxC,QAAL,GAAgB,KAAKA,QAAL,CAAcwC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKlC,MAAL,GAAc,KAAKA,MAAL,CAAYkC,IAAZ,CAAiB,IAAjB,CAAd;AACD;;AAyHDD,EAAAA,WAAW,CAACX,KAAD,EAAQ;AACjBA,IAAAA,KAAK,CAACc,cAAN;AACA,UAAMC,IAAI,GAAGf,KAAK,CAACC,MAAN,CAAa5B,KAAb,CAAmB,CAAnB,CAAb;AACA,UAAM2C,MAAM,GAAG,IAAI9E,MAAM,CAAC+E,UAAX,EAAf;AACAD,IAAAA,MAAM,CAACE,iBAAP,CAAyBH,IAAzB;;AACAC,IAAAA,MAAM,CAACG,SAAP,GAAmB,MAAM;AACvB,WAAKhE,QAAL,CAAc;AAAEoB,QAAAA,MAAM,EAAE6C,MAAM,CAACJ,MAAM,CAACxC,MAAR;AAAhB,OAAd;AACAf,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKE,KAAL,CAAWW,MAAjC;AACD,KAHD;;AAIAd,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD;;AACDmD,EAAAA,UAAU,CAACb,KAAD,EAAQ;AAChBA,IAAAA,KAAK,CAACc,cAAN;AACA,UAAMO,KAAK,GAAGrB,KAAK,CAACC,MAAN,CAAa5B,KAAb,CAAmB,CAAnB,CAAd;AACA,UAAMiD,OAAO,GAAG,IAAIpF,MAAM,CAAC+E,UAAX,EAAhB;AACAK,IAAAA,OAAO,CAACJ,iBAAR,CAA0BG,KAA1B;;AACAC,IAAAA,OAAO,CAACH,SAAR,GAAoB,MAAM;AACxB,WAAKhE,QAAL,CAAc;AAAEwB,QAAAA,OAAO,EAAEyC,MAAM,CAACE,OAAO,CAAC9C,MAAT;AAAjB,OAAd;AACAf,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,KAAKE,KAAL,CAAWe,OAAlC;AACD,KAHD;;AAIAlB,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;;AAED6D,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAK3D,KAAL,CAAWtB,IAAhB,EAAsB;AACpB,0BACE;AAAA,+BACE;AAAA,iCACE;AAAA,mCACE,QAAC,OAAD;AAAS,cAAA,SAAS,EAAC,QAAnB;AAA4B,cAAA,OAAO,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAUD;;AAED,QAAI,CAAC,KAAKsB,KAAL,CAAWI,UAAZ,IAA0B,CAAC,KAAKJ,KAAL,CAAWD,QAA1C,EAAoD;AAClD,0BACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACE;AAAA,iCACE,QAAC,GAAD;AAAA,mCACE,QAAC,GAAD;AAAK,cAAA,EAAE,EAAC,GAAR;AAAA,qCACE,QAAC,IAAD;AAAM,gBAAA,SAAS,EAAC,YAAhB;AAAA,uCACE,QAAC,QAAD;AAAA,yCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAkBD;;AAED,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACE,QAAC,GAAD;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAC,GAAR;AAAA,iCACE,QAAC,IAAD;AAAA,oCACE,QAAC,UAAD;AAAA,qCACE;AAAI,gBAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,QAAD;AAAA,qCACE,QAAC,IAAD;AAAA,wCACE,QAAC,GAAD;AAAA,yCACE,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAC,IAAR;AAAA,2CACE,QAAC,SAAD;AAAA,8CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAEE,QAAC,KAAD;AACE,wBAAA,WAAW,EAAC,MADd;AAEE,wBAAA,IAAI,EAAC,MAFP;AAGE,wBAAA,KAAK,EAAE,KAAKC,KAAL,CAAWqB,IAHpB;AAIE,wBAAA,QAAQ,EAAE,KAAKc;AAJjB;AAAA;AAAA;AAAA;AAAA,8BAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBADF,eAeE,QAAC,GAAD;AAAA,yCACE,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAC,IAAR;AAAA,2CACE,QAAC,SAAD;AAAA,8CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAEE,QAAC,KAAD;AACE,wBAAA,WAAW,EAAC,MADd;AAEE,wBAAA,IAAI,EAAC,MAFP;AAGE,wBAAA,KAAK,EAAE,KAAKnC,KAAL,CAAWsB,IAHpB;AAIE,wBAAA,QAAQ,EAAE,KAAKiB;AAJjB;AAAA;AAAA;AAAA;AAAA,8BAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAfF,eA4BE,QAAC,GAAD;AAAA,yCACE,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAC,IAAR;AAAA,2CACE,QAAC,SAAD;AAAA,8CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAEE,QAAC,KAAD;AACE,wBAAA,WAAW,EAAC,SADd;AAEE,wBAAA,IAAI,EAAC,MAFP;AAGE,wBAAA,KAAK,EAAE,KAAKvC,KAAL,CAAWuB,QAHpB;AAIE,wBAAA,QAAQ,EAAE,KAAKiB;AAJjB;AAAA;AAAA;AAAA;AAAA,8BAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBA5BF,eA0CE,QAAC,GAAD;AAAA,yCACE,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAC,IAAR;AAAA,2CACE,QAAC,SAAD;AAAA,8CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAEE,QAAC,KAAD;AACE,wBAAA,WAAW,EAAC,OADd;AAEE,wBAAA,IAAI,EAAC,MAFP;AAGE,wBAAA,KAAK,EAAE,KAAKxC,KAAL,CAAWwB,KAHpB;AAIE,wBAAA,QAAQ,EAAE,KAAKiB;AAJjB;AAAA;AAAA;AAAA;AAAA,8BAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBA1CF,eAuDE,QAAC,GAAD;AAAA,yCACE,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAC,IAAR;AAAA,2CACE,QAAC,SAAD;AAAA,8CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAEE,QAAC,KAAD;AACE,wBAAA,WAAW,EAAC,cADd;AAEE,wBAAA,IAAI,EAAC,MAFP;AAGE,wBAAA,KAAK,EAAE,KAAKzC,KAAL,CAAWyB,WAHpB;AAIE,wBAAA,QAAQ,EAAE,KAAKiB;AAJjB;AAAA;AAAA;AAAA;AAAA,8BAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAvDF,eAoEE,QAAC,GAAD;AAAA,yCACE,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAC,IAAR;AAAA,2CACE,QAAC,SAAD;AAAA,8CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAEE,QAAC,KAAD;AACE,wBAAA,WAAW,EAAC,YADd;AAEE,wBAAA,IAAI,EAAC,MAFP;AAGE,wBAAA,KAAK,EAAE,KAAK1C,KAAL,CAAW0B,SAHpB;AAIE,wBAAA,QAAQ,EAAE,KAAKiB;AAJjB;AAAA;AAAA;AAAA;AAAA,8BAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBApEF,eAiFE,QAAC,GAAD;AAAA,yCACE,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAC,IAAR;AAAA,2CACE,QAAC,SAAD;AAAA,8CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAEE,QAAC,QAAD;AACE,wBAAA,EAAE,EAAC,OADL;AAEE,wBAAA,QAAQ,EAAE,KAAKI;AAFjB;AAAA;AAAA;AAAA;AAAA,8BAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAjFF,eA4FE,QAAC,GAAD;AAAA,yCACE,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAC,IAAR;AAAA,2CACE,QAAC,SAAD;AAAA,8CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAEE,QAAC,QAAD;AACE,wBAAA,EAAE,EAAC,OADL;AAEE,wBAAA,QAAQ,EAAE,KAAKE;AAFjB;AAAA;AAAA;AAAA;AAAA,8BAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBA5FF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAJF,eA8GE,QAAC,UAAD;AAAA,qCACE,QAAC,MAAD;AAAQ,gBAAA,SAAS,EAAC,UAAlB;AAA6B,gBAAA,KAAK,EAAC,SAAnC;AAA6C,gBAAA,OAAO,EAAE,KAAKhC,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBA9GF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA6HD;;AA3U6B;;AA8UhC,eAAe/C,OAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport LandContract from \"../artifacts/Land.json\";\r\nimport getWeb3 from \"../getWeb3\";\r\nimport ipfs from '../ipfs';\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardFooter,\r\n  CardText,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport { Spinner,   FormFile} from 'react-bootstrap';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nclass AddLand extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      LandInstance: undefined,\r\n      account: null,\r\n      web3: null,\r\n      area: '',\r\n      city: '',\r\n      stateLoc: '',\r\n      price: '',\r\n      lands: null,\r\n      verficationStatus: false,\r\n      verified: '',\r\n      registered: '',\r\n      buffer: null,\r\n      ipfsHash: '',\r\n      propertyPID: '',\r\n      surveyNum: '',\r\n      buffer2: null,\r\n      document: '',\r\n    }\r\n    this.captureFile = this.captureFile.bind(this);\r\n    this.addimage = this.addimage.bind(this);\r\n    this.captureDoc = this.captureDoc.bind(this);\r\n    this.addDoc = this.addDoc.bind(this);\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    //For refreshing page only once\r\n    if (!window.location.hash) {\r\n      window.location = window.location + '#loaded';\r\n      window.location.reload();\r\n    }\r\n\r\n    try {\r\n      //Get network provider and web3 instance\r\n      const web3 = await getWeb3();\r\n\r\n      const accounts = await web3.eth.getAccounts();\r\n\r\n      const networkId = await web3.eth.net.getId();\r\n      const deployedNetwork = LandContract.networks[networkId];\r\n      const instance = new web3.eth.Contract(\r\n        LandContract.abi,\r\n        deployedNetwork && deployedNetwork.address,\r\n      );\r\n\r\n      this.setState({ LandInstance: instance, web3: web3, account: accounts[0] });\r\n      const currentAddress = await web3.currentProvider.selectedAddress;\r\n      console.log(currentAddress);\r\n      this.setState({ LandInstance: instance, web3: web3, account: accounts[0] });\r\n      var verified = await this.state.LandInstance.methods.isVerified(currentAddress).call();\r\n      console.log(verified);\r\n      this.setState({ verified: verified });\r\n      var registered = await this.state.LandInstance.methods.isSeller(currentAddress).call();\r\n      console.log(registered);\r\n      this.setState({ registered: registered });\r\n\r\n\r\n    } catch (error) {\r\n      // Catch any errors for any of the above operations.\r\n      alert(\r\n        `Failed to load web3, accounts, or contract. Check console for details.`,\r\n      );\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  addimage = async () => {\r\n    // alert('In add image')\r\n    await ipfs.files.add(this.state.buffer, (error, result) => {\r\n      if (error) {\r\n        alert(error)\r\n        return\r\n      }\r\n\r\n      alert(result[0].hash)\r\n      this.setState({ ipfsHash: result[0].hash });\r\n      console.log('ipfsHash:', this.state.ipfsHash);\r\n    })\r\n  }\r\n  addDoc = async () => {\r\n    // alert('In add image')\r\n    await ipfs.files.add(this.state.buffer2, (error, result) => {\r\n      if (error) {\r\n        alert(error)\r\n        return\r\n      }\r\n\r\n      alert(result[0].hash)\r\n      this.setState({ document: result[0].hash });\r\n      console.log('document:', this.state.document);\r\n    })\r\n  }\r\n\r\n  //QmYdztkcPJLmGmwLmM4nyBfVatoBMRDuUjmgBupjmTodAP\r\n  addLand = async () => {\r\n    this.addimage();\r\n    this.addDoc();\r\n    // alert('After add image')\r\n    await new Promise(resolve => setTimeout(resolve, 15000));\r\n    if (this.state.area === '' || this.state.city === '' || this.state.stateLoc === '' || this.state.price === '' || this.state.propertyPID === '' || this.state.surveyNum === '') {\r\n      alert(\"All the fields are compulsory!\");\r\n    } else if ((!Number(this.state.area)) || (!Number(this.state.price))) {\r\n      alert(\"Land area and Price of Land must be a number!\");\r\n    } else {\r\n      await this.state.LandInstance.methods.addLand(\r\n        this.state.area,\r\n        this.state.city,\r\n        this.state.stateLoc,\r\n        this.state.price, \r\n        this.state.propertyPID,\r\n        this.state.surveyNum,\r\n        this.state.ipfsHash, \r\n        this.state.document)\r\n        .send({\r\n          from: this.state.account,\r\n          gas: 2100000\r\n        }).then(response => {\r\n          this.props.history.push(\"/Seller/SellerDashboard\");\r\n        });\r\n\r\n      //Reload\r\n      window.location.reload(false);\r\n    }\r\n  }\r\n  // _city,string  _state, uint landPrice, uint _propertyPID,uint _surveyNum,string memory _ipfsHash\r\n\r\n  updateArea = event => (\r\n    this.setState({ area: event.target.value })\r\n  )\r\n  updateCity = event => (\r\n    this.setState({ city: event.target.value })\r\n  )\r\n  updateState = event => (\r\n    this.setState({ stateLoc: event.target.value })\r\n  )\r\n  updatePrice = event => (\r\n    this.setState({ price: event.target.value })\r\n  )\r\n  updatePID = event => (\r\n    this.setState({ propertyPID: event.target.value })\r\n  )\r\n  updateSurveyNum = event => (\r\n    this.setState({ surveyNum: event.target.value })\r\n  )\r\n  captureFile(event) {\r\n    event.preventDefault()\r\n    const file = event.target.files[0]\r\n    const reader = new window.FileReader()\r\n    reader.readAsArrayBuffer(file)\r\n    reader.onloadend = () => {\r\n      this.setState({ buffer: Buffer(reader.result) })\r\n      console.log('buffer', this.state.buffer)\r\n    }\r\n    console.log('caoture file...')\r\n  }\r\n  captureDoc(event) {\r\n    event.preventDefault()\r\n    const file2 = event.target.files[0]\r\n    const reader2 = new window.FileReader()\r\n    reader2.readAsArrayBuffer(file2)\r\n    reader2.onloadend = () => {\r\n      this.setState({ buffer2: Buffer(reader2.result) })\r\n      console.log('buffer2', this.state.buffer2)\r\n    }\r\n    console.log('caoture doc...')\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.web3) {\r\n      return (\r\n        <div>\r\n          <div>\r\n            <h1>\r\n              <Spinner animation=\"border\" variant=\"primary\" />\r\n            </h1>\r\n          </div>\r\n\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (!this.state.registered || !this.state.verified) {\r\n      return (\r\n        <div className=\"content\">\r\n          <div>\r\n            <Row>\r\n              <Col xs=\"6\">\r\n                <Card className=\"card-chart\">\r\n                  <CardBody>\r\n                    <h1>\r\n                      You are not verified to view this page\r\n                                        </h1>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"content\">\r\n        <Row>\r\n          <Col md=\"8\">\r\n            <Card>\r\n              <CardHeader>\r\n                <h5 className=\"title\">Add Land</h5>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Form>\r\n                  <Row>\r\n                    <Col md=\"12\">\r\n                      <FormGroup>\r\n                        <label>Area (in sqm.)</label>\r\n                        <Input\r\n                          placeholder=\"Area\"\r\n                          type=\"text\"\r\n                          value={this.state.area}\r\n                          onChange={this.updateArea}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"12\">\r\n                      <FormGroup>\r\n                        <label>City</label>\r\n                        <Input\r\n                          placeholder=\"City\"\r\n                          type=\"text\"\r\n                          value={this.state.city}\r\n                          onChange={this.updateCity}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"12\">\r\n                      <FormGroup>\r\n                        <label>Country</label>\r\n                        <Input\r\n                          placeholder=\"Country\"\r\n                          type=\"text\"\r\n                          value={this.state.stateLoc}\r\n                          onChange={this.updateState}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"12\">\r\n                      <FormGroup>\r\n                        <label>Price</label>\r\n                        <Input\r\n                          placeholder=\"Price\"\r\n                          type=\"text\"\r\n                          value={this.state.price}\r\n                          onChange={this.updatePrice}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"12\">\r\n                      <FormGroup>\r\n                        <label>Property PID Number</label>\r\n                        <Input\r\n                          placeholder=\"Property PID\"\r\n                          type=\"text\"\r\n                          value={this.state.propertyPID}\r\n                          onChange={this.updatePID}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"12\">\r\n                      <FormGroup>\r\n                        <label>Physical Survey Number</label>\r\n                        <Input\r\n                          placeholder=\"Survey Num\"\r\n                          type=\"text\"\r\n                          value={this.state.surveyNum}\r\n                          onChange={this.updateSurveyNum}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"12\">\r\n                      <FormGroup>\r\n                        <label>Insert Land Image</label>\r\n                        <FormFile\r\n                          id=\"File1\"\r\n                          onChange={this.captureFile}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"12\">\r\n                      <FormGroup>\r\n                        <label>Insert ID card document</label>\r\n                        <FormFile\r\n                          id=\"File2\"\r\n                          onChange={this.captureDoc}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              </CardBody>\r\n              <CardFooter>\r\n                <Button className=\"btn-fill\" color=\"primary\" onClick={this.addLand}>\r\n                  Add Land\r\n                </Button>\r\n              </CardFooter>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default AddLand;\r\n"]},"metadata":{},"sourceType":"module"}