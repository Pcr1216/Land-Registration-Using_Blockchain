{"ast":null,"code":"'use strict';\n\nconst promisify = require('promisify-es6');\n\nconst CID = require('cids');\n\nmodule.exports = send => {\n  return promisify((cid, dLink, opts, callback) => {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    if (!opts) {\n      opts = {};\n    }\n\n    try {\n      cid = new CID(cid);\n    } catch (err) {\n      return callback(err);\n    }\n\n    send({\n      path: 'object/patch/add-link',\n      args: [cid.toString(), dLink.name, dLink.cid.toString()]\n    }, (err, result) => {\n      if (err) {\n        return callback(err);\n      }\n\n      callback(null, new CID(result.Hash));\n    });\n  });\n};","map":{"version":3,"sources":["D:/BE COMP SS/Final Year Project/5/land2/land2/client/node_modules/ipfs-http-client/src/object/addLink.js"],"names":["promisify","require","CID","module","exports","send","cid","dLink","opts","callback","err","path","args","toString","name","result","Hash"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,MAAD,CAAnB;;AAEAE,MAAM,CAACC,OAAP,GAAkBC,IAAD,IAAU;AACzB,SAAOL,SAAS,CAAC,CAACM,GAAD,EAAMC,KAAN,EAAaC,IAAb,EAAmBC,QAAnB,KAAgC;AAC/C,QAAI,OAAOD,IAAP,KAAgB,UAApB,EAAgC;AAC9BC,MAAAA,QAAQ,GAAGD,IAAX;AACAA,MAAAA,IAAI,GAAG,EAAP;AACD;;AACD,QAAI,CAACA,IAAL,EAAW;AACTA,MAAAA,IAAI,GAAG,EAAP;AACD;;AAED,QAAI;AACFF,MAAAA,GAAG,GAAG,IAAIJ,GAAJ,CAAQI,GAAR,CAAN;AACD,KAFD,CAEE,OAAOI,GAAP,EAAY;AACZ,aAAOD,QAAQ,CAACC,GAAD,CAAf;AACD;;AAEDL,IAAAA,IAAI,CAAC;AACHM,MAAAA,IAAI,EAAE,uBADH;AAEHC,MAAAA,IAAI,EAAE,CACJN,GAAG,CAACO,QAAJ,EADI,EAEJN,KAAK,CAACO,IAFF,EAGJP,KAAK,CAACD,GAAN,CAAUO,QAAV,EAHI;AAFH,KAAD,EAOD,CAACH,GAAD,EAAMK,MAAN,KAAiB;AAClB,UAAIL,GAAJ,EAAS;AACP,eAAOD,QAAQ,CAACC,GAAD,CAAf;AACD;;AACDD,MAAAA,QAAQ,CAAC,IAAD,EAAO,IAAIP,GAAJ,CAAQa,MAAM,CAACC,IAAf,CAAP,CAAR;AACD,KAZG,CAAJ;AAaD,GA5Be,CAAhB;AA6BD,CA9BD","sourcesContent":["'use strict'\n\nconst promisify = require('promisify-es6')\nconst CID = require('cids')\n\nmodule.exports = (send) => {\n  return promisify((cid, dLink, opts, callback) => {\n    if (typeof opts === 'function') {\n      callback = opts\n      opts = {}\n    }\n    if (!opts) {\n      opts = {}\n    }\n\n    try {\n      cid = new CID(cid)\n    } catch (err) {\n      return callback(err)\n    }\n\n    send({\n      path: 'object/patch/add-link',\n      args: [\n        cid.toString(),\n        dLink.name,\n        dLink.cid.toString()\n      ]\n    }, (err, result) => {\n      if (err) {\n        return callback(err)\n      }\n      callback(null, new CID(result.Hash))\n    })\n  })\n}\n"]},"metadata":{},"sourceType":"script"}