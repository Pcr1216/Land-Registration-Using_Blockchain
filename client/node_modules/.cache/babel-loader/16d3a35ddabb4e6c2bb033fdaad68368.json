{"ast":null,"code":"'use strict';\n\nconst dagNodeUtil = require('./util');\n\nconst cloneLinks = dagNodeUtil.cloneLinks;\nconst cloneData = dagNodeUtil.cloneData;\n\nconst create = require('./create');\n\nconst CID = require('cids');\n\nfunction rmLink(dagNode, nameOrCid, callback) {\n  const data = cloneData(dagNode);\n  let links = cloneLinks(dagNode);\n\n  if (typeof nameOrCid === 'string') {\n    links = links.filter(link => link.name !== nameOrCid);\n  } else if (Buffer.isBuffer(nameOrCid) || CID.isCID(nameOrCid)) {\n    links = links.filter(link => !link.cid.equals(nameOrCid));\n  } else {\n    return callback(new Error('second arg needs to be a name or CID'), null);\n  }\n\n  create(data, links, callback);\n}\n\nmodule.exports = rmLink;","map":{"version":3,"sources":["D:/BE COMP SS/Final Year Project/5/land2/land2/client/node_modules/ipld-dag-pb/src/dag-node/rmLink.js"],"names":["dagNodeUtil","require","cloneLinks","cloneData","create","CID","rmLink","dagNode","nameOrCid","callback","data","links","filter","link","name","Buffer","isBuffer","isCID","cid","equals","Error","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,WAAW,GAAGC,OAAO,CAAC,QAAD,CAA3B;;AACA,MAAMC,UAAU,GAAGF,WAAW,CAACE,UAA/B;AACA,MAAMC,SAAS,GAAGH,WAAW,CAACG,SAA9B;;AACA,MAAMC,MAAM,GAAGH,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMI,GAAG,GAAGJ,OAAO,CAAC,MAAD,CAAnB;;AAEA,SAASK,MAAT,CAAiBC,OAAjB,EAA0BC,SAA1B,EAAqCC,QAArC,EAA+C;AAC7C,QAAMC,IAAI,GAAGP,SAAS,CAACI,OAAD,CAAtB;AACA,MAAII,KAAK,GAAGT,UAAU,CAACK,OAAD,CAAtB;;AAEA,MAAI,OAAOC,SAAP,KAAqB,QAAzB,EAAmC;AACjCG,IAAAA,KAAK,GAAGA,KAAK,CAACC,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,IAAL,KAAcN,SAArC,CAAR;AACD,GAFD,MAEO,IAAIO,MAAM,CAACC,QAAP,CAAgBR,SAAhB,KAA8BH,GAAG,CAACY,KAAJ,CAAUT,SAAV,CAAlC,EAAwD;AAC7DG,IAAAA,KAAK,GAAGA,KAAK,CAACC,MAAN,CAAcC,IAAD,IAAU,CAACA,IAAI,CAACK,GAAL,CAASC,MAAT,CAAgBX,SAAhB,CAAxB,CAAR;AACD,GAFM,MAEA;AACL,WAAOC,QAAQ,CAAC,IAAIW,KAAJ,CAAU,sCAAV,CAAD,EAAoD,IAApD,CAAf;AACD;;AAEDhB,EAAAA,MAAM,CAACM,IAAD,EAAOC,KAAP,EAAcF,QAAd,CAAN;AACD;;AAEDY,MAAM,CAACC,OAAP,GAAiBhB,MAAjB","sourcesContent":["'use strict'\n\nconst dagNodeUtil = require('./util')\nconst cloneLinks = dagNodeUtil.cloneLinks\nconst cloneData = dagNodeUtil.cloneData\nconst create = require('./create')\nconst CID = require('cids')\n\nfunction rmLink (dagNode, nameOrCid, callback) {\n  const data = cloneData(dagNode)\n  let links = cloneLinks(dagNode)\n\n  if (typeof nameOrCid === 'string') {\n    links = links.filter((link) => link.name !== nameOrCid)\n  } else if (Buffer.isBuffer(nameOrCid) || CID.isCID(nameOrCid)) {\n    links = links.filter((link) => !link.cid.equals(nameOrCid))\n  } else {\n    return callback(new Error('second arg needs to be a name or CID'), null)\n  }\n\n  create(data, links, callback)\n}\n\nmodule.exports = rmLink\n"]},"metadata":{},"sourceType":"script"}