{"ast":null,"code":"var _jsxFileName = \"D:\\\\BE COMP SS\\\\Final Year Project\\\\5\\\\land2\\\\land2\\\\client\\\\src\\\\components\\\\FixedPlugin\\\\FixedPlugin.js\",\n    _s = $RefreshSig$();\n\n/*!\r\n\r\n=========================================================\r\n* Black Dashboard React v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\nimport React from \"react\"; // reactstrap components\n\nimport { Button, Dropdown, DropdownToggle, Badge } from \"reactstrap\";\nimport { ThemeContext, themes } from \"../../contexts/ThemeContext\";\nimport { backgroundColors } from \"../../contexts/BackgroundColorContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FixedPlugin(props) {\n  _s();\n\n  const [dropDownIsOpen, setdropDownIsOpen] = React.useState(false);\n\n  const handleClick = () => {\n    setdropDownIsOpen(!dropDownIsOpen);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed-plugin\",\n    children: /*#__PURE__*/_jsxDEV(Dropdown, {\n      isOpen: dropDownIsOpen,\n      toggle: handleClick,\n      children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n        tag: \"div\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-cog fa-2x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"dropdown-menu show\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"header-title\",\n          children: \"SIDEBAR BACKGROUND\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"adjustments-line\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"badge-colors text-center\",\n            children: [/*#__PURE__*/_jsxDEV(Badge, {\n              color: \"primary\",\n              className: props.bgColor === backgroundColors.primary ? \"active\" : \"\",\n              onClick: () => {\n                props.handleBgClick(backgroundColors.primary);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(Badge, {\n              color: \"info\",\n              className: props.bgColor === backgroundColors.blue ? \"active\" : \"\",\n              onClick: () => {\n                props.handleBgClick(backgroundColors.blue);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(Badge, {\n              color: \"success\",\n              className: props.bgColor === backgroundColors.green ? \"active\" : \"\",\n              onClick: () => {\n                props.handleBgClick(backgroundColors.green);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"adjustments-line text-center color-change\",\n          children: /*#__PURE__*/_jsxDEV(ThemeContext.Consumer, {\n            children: _ref => {\n              let {\n                changeTheme\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"color-label\",\n                  children: \"LIGHT MODE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 19\n                }, this), \" \", /*#__PURE__*/_jsxDEV(Badge, {\n                  className: \"light-badge mr-2\",\n                  onClick: () => changeTheme(themes.light)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 19\n                }, this), \" \", /*#__PURE__*/_jsxDEV(Badge, {\n                  className: \"dark-badge ml-2\",\n                  onClick: () => changeTheme(themes.dark)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 19\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"color-label\",\n                  children: \"DARK MODE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 19\n                }, this), \" \"]\n              }, void 0, true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"button-container\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"default\",\n            block: true,\n            className: \"btn-round\",\n            outline: true,\n            href: \"https://.creative-tim.com/black-dashboard-react/#/documentation/tutorial\",\n            children: \"Documentation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FixedPlugin, \"whZxLtj+MNAhezSz6KZprZ+85fc=\");\n\n_c = FixedPlugin;\nexport default FixedPlugin;\n\nvar _c;\n\n$RefreshReg$(_c, \"FixedPlugin\");","map":{"version":3,"sources":["D:/BE COMP SS/Final Year Project/5/land2/land2/client/src/components/FixedPlugin/FixedPlugin.js"],"names":["React","Button","Dropdown","DropdownToggle","Badge","ThemeContext","themes","backgroundColors","FixedPlugin","props","dropDownIsOpen","setdropDownIsOpen","useState","handleClick","bgColor","primary","handleBgClick","blue","green","changeTheme","light","dark"],"mappings":"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","sourcesContent":["/*!\r\n\r\n=========================================================\r\n* Black Dashboard React v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n\r\n// reactstrap components\r\nimport { Button, Dropdown, DropdownToggle, Badge } from \"reactstrap\";\r\nimport { ThemeContext, themes } from \"../../contexts/ThemeContext\";\r\nimport { backgroundColors } from \"../../contexts/BackgroundColorContext\";\r\n\r\nfunction FixedPlugin(props) {\r\n  const [dropDownIsOpen, setdropDownIsOpen] = React.useState(false);\r\n  const handleClick = () => {\r\n    setdropDownIsOpen(!dropDownIsOpen);\r\n  };\r\n  return (\r\n    <div className=\"fixed-plugin\">\r\n      <Dropdown isOpen={dropDownIsOpen} toggle={handleClick}>\r\n        <DropdownToggle tag=\"div\">\r\n          <i className=\"fa fa-cog fa-2x\" />\r\n        </DropdownToggle>\r\n        <ul className=\"dropdown-menu show\">\r\n          <li className=\"header-title\">SIDEBAR BACKGROUND</li>\r\n          <li className=\"adjustments-line\">\r\n            <div className=\"badge-colors text-center\">\r\n              <Badge\r\n                color=\"primary\"\r\n                className={\r\n                  props.bgColor === backgroundColors.primary ? \"active\" : \"\"\r\n                }\r\n                onClick={() => {\r\n                  props.handleBgClick(backgroundColors.primary);\r\n                }}\r\n              />{\" \"}\r\n              <Badge\r\n                color=\"info\"\r\n                className={\r\n                  props.bgColor === backgroundColors.blue ? \"active\" : \"\"\r\n                }\r\n                onClick={() => {\r\n                  props.handleBgClick(backgroundColors.blue);\r\n                }}\r\n              />{\" \"}\r\n              <Badge\r\n                color=\"success\"\r\n                className={\r\n                  props.bgColor === backgroundColors.green ? \"active\" : \"\"\r\n                }\r\n                onClick={() => {\r\n                  props.handleBgClick(backgroundColors.green);\r\n                }}\r\n              />{\" \"}\r\n            </div>\r\n          </li>\r\n          <li className=\"adjustments-line text-center color-change\">\r\n            <ThemeContext.Consumer>\r\n              {({ changeTheme }) => (\r\n                <>\r\n                  <span className=\"color-label\">LIGHT MODE</span>{\" \"}\r\n                  <Badge\r\n                    className=\"light-badge mr-2\"\r\n                    onClick={() => changeTheme(themes.light)}\r\n                  />{\" \"}\r\n                  <Badge\r\n                    className=\"dark-badge ml-2\"\r\n                    onClick={() => changeTheme(themes.dark)}\r\n                  />{\" \"}\r\n                  <span className=\"color-label\">DARK MODE</span>{\" \"}\r\n                </>\r\n              )}\r\n            </ThemeContext.Consumer>\r\n          </li>\r\n          <li className=\"button-container\">\r\n            <Button\r\n              color=\"default\"\r\n              block\r\n              className=\"btn-round\"\r\n              outline\r\n              href=\"https://.creative-tim.com/black-dashboard-react/#/documentation/tutorial\"\r\n            >\r\n              Documentation\r\n            </Button>\r\n          </li>\r\n        </ul>\r\n      </Dropdown>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FixedPlugin;\r\n"]},"metadata":{},"sourceType":"module"}