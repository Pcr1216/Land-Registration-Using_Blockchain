{"ast":null,"code":"var _jsxFileName = \"D:\\\\BE COMP SS\\\\Final Year Project\\\\5\\\\land2\\\\land2\\\\client\\\\src\\\\views\\\\ApproveTransaction.js\";\nimport { LoadingContainer } from '@drizzle/react-components';\nimport { DrizzleProvider } from '@drizzle/react-plugin';\nimport React, { Component } from 'react';\nimport { Spinner } from 'react-bootstrap'; // reactstrap components\n\nimport { Button, Card, CardBody, CardHeader, CardTitle, Table } from \"reactstrap\";\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Land from \"../artifacts/Land.json\";\nimport getWeb3 from \"../getWeb3\";\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drizzleOptions = {\n  contracts: [Land]\n};\nvar requestTable = [];\n\nclass ApproveRequest extends Component {\n  constructor(props) {\n    super(props);\n\n    this.landTransfer = (landId, newOwner) => async () => {\n      await this.state.LandInstance.methods.LandOwnershipTransfer(landId, newOwner).send({\n        from: this.state.account,\n        gas: 2100000\n      }); //Reload\n      // console.log(newOwner);\n      // console.log(completed);\n      // // this.setState({completed:false});\n      // completed = false;\n      // console.log(completed);\n\n      window.location.reload(false);\n    };\n\n    this.componentDidMount = async () => {\n      //For refreshing page only once\n      if (!window.location.hash) {\n        window.location = window.location + '#loaded';\n        window.location.reload();\n      }\n\n      try {\n        //Get network provider and web3 instance\n        const web3 = await getWeb3();\n        const accounts = await web3.eth.getAccounts();\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = Land.networks[networkId];\n        const instance = new web3.eth.Contract(Land.abi, deployedNetwork && deployedNetwork.address);\n        this.setState({\n          LandInstance: instance,\n          web3: web3,\n          account: accounts[0]\n        });\n        const currentAddress = await web3.currentProvider.selectedAddress;\n        console.log(currentAddress);\n        var requestsCount = await this.state.LandInstance.methods.getRequestsCount().call();\n        console.log(requestsCount);\n        var verified = await this.state.LandInstance.methods.isLandInspector(currentAddress).call(); //console.log(verified);\n\n        this.setState({\n          verified: verified\n        }); // var requestsMap = [];\n        // requestsMap = await this.state.LandInstance.methods.getAllRequests().call();\n\n        for (let i = 1; i < requestsCount + 1; i++) {\n          var request = await this.state.LandInstance.methods.getRequestDetails(i).call();\n          console.log(request); // console.log(request[0].toLowerCase());\n          // console.log(currentAddress);\n\n          var isPaid = await this.state.LandInstance.methods.isPaid(request[2]).call();\n          console.log(isPaid);\n          requestTable.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: i\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: request[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 43\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: request[1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 64\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: request[2]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 85\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: request[3].toString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 106\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: this.landTransfer(i, request[1]),\n                disabled: !isPaid,\n                className: \"button-vote\",\n                children: \"Approve Land Transfer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 27\n          }, this)); // console.log(request[1]);\n        }\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n        console.error(error);\n      }\n    };\n\n    this.state = {\n      LandInstance: undefined,\n      account: null,\n      web3: null,\n      approved: '',\n      verified: ''\n    };\n  }\n\n  render() {\n    if (!this.state.web3) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: /*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\",\n              variant: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (!this.state.verified) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"You are not verified to view this page.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(DrizzleProvider, {\n        options: drizzleOptions,\n        children: /*#__PURE__*/_jsxDEV(LoadingContainer, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              children: /*#__PURE__*/_jsxDEV(CardTitle, {\n                tag: \"h4\",\n                children: \"Lands Tranfer Request Info\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                className: \"tablesorter\",\n                responsive: true,\n                color: \"black\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  className: \"text-primary\",\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"#\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Seller ID\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 154,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Buyer ID\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 155,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Land ID\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 156,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Request Status\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 157,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Verify Transfer\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 158,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: requestTable\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ApproveRequest;","map":{"version":3,"sources":["D:/BE COMP SS/Final Year Project/5/land2/land2/client/src/views/ApproveTransaction.js"],"names":["LoadingContainer","DrizzleProvider","React","Component","Spinner","Button","Card","CardBody","CardHeader","CardTitle","Table","Land","getWeb3","drizzleOptions","contracts","requestTable","ApproveRequest","constructor","props","landTransfer","landId","newOwner","state","LandInstance","methods","LandOwnershipTransfer","send","from","account","gas","window","location","reload","componentDidMount","hash","web3","accounts","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","instance","Contract","abi","address","setState","currentAddress","currentProvider","selectedAddress","console","log","requestsCount","getRequestsCount","call","verified","isLandInspector","i","request","getRequestDetails","isPaid","push","toString","error","alert","undefined","approved","render"],"mappings":"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","sourcesContent":["import {\r\n  LoadingContainer\r\n} from '@drizzle/react-components';\r\nimport { DrizzleProvider } from '@drizzle/react-plugin';\r\nimport React, { Component } from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n// reactstrap components\r\nimport {\r\n  Button, Card, CardBody, CardHeader, CardTitle, Table\r\n} from \"reactstrap\";\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport Land from \"../artifacts/Land.json\";\r\nimport getWeb3 from \"../getWeb3\";\r\nimport '../index.css';\r\n\r\n\r\n\r\n\r\nconst drizzleOptions = {\r\n  contracts: [Land]\r\n}\r\n\r\nvar requestTable = [];\r\n\r\nclass ApproveRequest extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      LandInstance: undefined,\r\n      account: null,\r\n      web3: null,\r\n      approved: '',\r\n      verified: '',\r\n    }\r\n  }\r\n  landTransfer = (landId, newOwner) => async () => {\r\n\r\n    await this.state.LandInstance.methods.LandOwnershipTransfer(\r\n      landId, newOwner\r\n    ).send({\r\n      from: this.state.account,\r\n      gas: 2100000\r\n    });\r\n    //Reload\r\n    // console.log(newOwner);\r\n    // console.log(completed);\r\n    // // this.setState({completed:false});\r\n    // completed = false;\r\n    // console.log(completed);\r\n\r\n    window.location.reload(false);\r\n\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    //For refreshing page only once\r\n    if (!window.location.hash) {\r\n      window.location = window.location + '#loaded';\r\n      window.location.reload();\r\n    }\r\n\r\n    try {\r\n      //Get network provider and web3 instance\r\n      const web3 = await getWeb3();\r\n\r\n      const accounts = await web3.eth.getAccounts();\r\n\r\n      const networkId = await web3.eth.net.getId();\r\n      const deployedNetwork = Land.networks[networkId];\r\n      const instance = new web3.eth.Contract(\r\n        Land.abi,\r\n        deployedNetwork && deployedNetwork.address,\r\n      );\r\n\r\n      this.setState({ LandInstance: instance, web3: web3, account: accounts[0] });\r\n\r\n      const currentAddress = await web3.currentProvider.selectedAddress;\r\n      console.log(currentAddress);\r\n\r\n      var requestsCount = await this.state.LandInstance.methods.getRequestsCount().call();\r\n      console.log(requestsCount);\r\n      var verified = await this.state.LandInstance.methods.isLandInspector(currentAddress).call();\r\n      //console.log(verified);\r\n      this.setState({ verified: verified });\r\n      // var requestsMap = [];\r\n      // requestsMap = await this.state.LandInstance.methods.getAllRequests().call();\r\n\r\n      for (let i = 1; i < requestsCount + 1; i++) {\r\n        var request = await this.state.LandInstance.methods.getRequestDetails(i).call();\r\n        console.log(request);\r\n        // console.log(request[0].toLowerCase());\r\n        // console.log(currentAddress);\r\n        var isPaid = await this.state.LandInstance.methods.isPaid(request[2]).call();\r\n        console.log(isPaid);\r\n        requestTable.push(<tr><td>{i}</td><td>{request[0]}</td><td>{request[1]}</td><td>{request[2]}</td><td>{request[3].toString()}</td>\r\n          <td>\r\n            <Button onClick={this.landTransfer(i, request[1])} disabled={!isPaid} className=\"button-vote\">\r\n              Approve Land Transfer\r\n            </Button>\r\n          </td></tr>)\r\n        // console.log(request[1]);\r\n      }\r\n\r\n    } catch (error) {\r\n      // Catch any errors for any of the above operations.\r\n      alert(\r\n        `Failed to load web3, accounts, or contract. Check console for details.`,\r\n      );\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (!this.state.web3) {\r\n      return (\r\n        <div>\r\n          <div>\r\n            <h1>\r\n              <Spinner animation=\"border\" variant=\"primary\" />\r\n            </h1>\r\n          </div>\r\n\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (!this.state.verified) {\r\n      return (\r\n        <div className=\"content\">\r\n          <div>\r\n            <h1>\r\n              You are not verified to view this page.\r\n            </h1>\r\n          </div>\r\n\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"content\">\r\n        <DrizzleProvider options={drizzleOptions}>\r\n          <LoadingContainer>\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle tag=\"h4\">Lands Tranfer Request Info</CardTitle>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Table className=\"tablesorter\" responsive color=\"black\">\r\n                  <thead className=\"text-primary\">\r\n                    <tr>\r\n                      <th>#</th>\r\n                      <th>Seller ID</th>\r\n                      <th>Buyer ID</th>\r\n                      <th>Land ID</th>\r\n                      <th>Request Status</th>\r\n                      <th>Verify Transfer</th>\r\n\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {requestTable}\r\n                  </tbody>\r\n                </Table>\r\n              </CardBody>\r\n            </Card>\r\n          </LoadingContainer>\r\n        </DrizzleProvider>\r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default ApproveRequest;\r\n"]},"metadata":{},"sourceType":"module"}