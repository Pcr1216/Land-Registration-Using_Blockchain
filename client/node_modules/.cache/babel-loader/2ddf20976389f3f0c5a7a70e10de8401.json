{"ast":null,"code":"var _jsxFileName = \"D:\\\\BE COMP SS\\\\Final Year Project\\\\5\\\\land2\\\\land2\\\\client\\\\src\\\\views\\\\updateSeller.js\";\nimport { LoadingContainer } from '@drizzle/react-components';\nimport { DrizzleProvider } from '@drizzle/react-plugin';\nimport React, { Component } from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport { Button, Card, CardBody, CardFooter, CardHeader, Col, Form, FormGroup, Input, Row } from \"reactstrap\";\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Land from \"../artifacts/Land.json\";\nimport getWeb3 from \"../getWeb3\";\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drizzleOptions = {\n  contracts: [Land]\n}; // var buyers = 0;\n// var sellers = 0;\n\nvar seller;\nvar sellerTable = [];\nvar verification = [];\n\nclass updateSeller extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      //For refreshing page only once\n      if (!window.location.hash) {\n        window.location = window.location + '#loaded';\n        window.location.reload();\n      }\n\n      try {\n        //Get network provider and web3 instance\n        const web3 = await getWeb3();\n        const accounts = await web3.eth.getAccounts();\n        const currentAddress = await web3.currentProvider.selectedAddress;\n        console.log(currentAddress);\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = Land.networks[networkId];\n        const instance = new web3.eth.Contract(Land.abi, deployedNetwork && deployedNetwork.address);\n        this.setState({\n          LandInstance: instance,\n          web3: web3,\n          account: accounts[0]\n        });\n        this.setState({\n          address: currentAddress\n        });\n        var seller_verify = await this.state.LandInstance.methods.isVerified(currentAddress).call();\n        console.log(seller_verify);\n        var not_verify = await this.state.LandInstance.methods.isRejected(currentAddress).call();\n        console.log(not_verify);\n\n        if (seller_verify) {\n          verification.push( /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"verified\",\n            children: [\"Verified \", /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-user-check\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 61\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 35\n          }, this));\n        } else if (not_verify) {\n          verification.push( /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"rejected\",\n            children: [\"Rejected \", /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-user-times\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 61\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 35\n          }, this));\n        } else {\n          verification.push( /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"unknown\",\n            children: [\"Not Yet Verified \", /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-user-cog\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 68\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 35\n          }, this));\n        }\n\n        seller = await this.state.LandInstance.methods.getSellerDetails(currentAddress).call();\n        console.log(seller);\n        console.log(seller[0]);\n        this.setState({\n          name: seller[0],\n          age: seller[1],\n          idNo: seller[2],\n          kraPin: seller[3],\n          landsOwned: seller[4]\n        }); //sellerTable.push(<div><p>Name: {seller[0]}</p><p>Age: {seller[1]}</p><p>ID Number: {seller[2]}</p><p>KRA Number: {seller[3]}</p><p>Owned Lands: {seller[4]}</p></div>);\n\n        sellerTable.push( /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: \"12\",\n            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Your Wallet Address: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                disabled: true,\n                type: \"text\",\n                value: currentAddress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this));\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n        console.error(error);\n      }\n    };\n\n    this.updateSeller = async () => {\n      if (this.state.name === '' || this.state.age === '' || this.state.idNo === '' || this.state.kraPin === '' || this.state.landsOwned === '') {\n        alert(\"All the fields are compulsory!\");\n      } else if (this.state.idNo.length !== 12) {\n        alert(\"Aadhar Number should be 12 digits long!\");\n      } else if (this.state.kraPin.length !== 10) {\n        alert(\"Pan Card should be a 10 digit unique number!\");\n      } else if (!Number(this.state.age)) {\n        alert(\"Your age must be a number\");\n      } else {\n        await this.state.LandInstance.methods.updateSeller(this.state.name, this.state.age, this.state.idNo, this.state.kraPin, this.state.landsOwned).send({\n          from: this.state.address,\n          gas: 2100000\n        }).then(response => {\n          this.props.history.push(\"/Seller/sellerProfile\");\n        }); //Reload\n\n        window.location.reload(false);\n      }\n    };\n\n    this.updateName = event => this.setState({\n      name: event.target.value\n    });\n\n    this.updateAge = event => this.setState({\n      age: event.target.value\n    });\n\n    this.updateIdno = event => this.setState({\n      idNo: event.target.value\n    });\n\n    this.updateKra = event => this.setState({\n      kraPin: event.target.value\n    });\n\n    this.updateOwnedLands = event => this.setState({\n      landsOwned: event.target.value\n    });\n\n    this.state = {\n      LandInstance: undefined,\n      account: null,\n      web3: null,\n      buyers: 0,\n      sellers: 0,\n      address: '',\n      name: '',\n      age: '',\n      idNo: '',\n      kraPin: '',\n      landsOwned: '',\n      isVerified: false,\n      verified: ''\n    };\n  }\n\n  render() {\n    if (!this.state.web3) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: /*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\",\n              variant: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(DrizzleProvider, {\n        options: drizzleOptions,\n        children: /*#__PURE__*/_jsxDEV(LoadingContainer, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              md: \"8\",\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"title\",\n                    children: \"Seller Profile\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"title\",\n                    children: verification\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n                  children: /*#__PURE__*/_jsxDEV(Form, {\n                    children: [sellerTable, /*#__PURE__*/_jsxDEV(Row, {\n                      children: /*#__PURE__*/_jsxDEV(Col, {\n                        md: \"12\",\n                        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            children: \"Name\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 194,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Input, {\n                            type: \"text\",\n                            value: this.state.name,\n                            onChange: this.updateName\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 195,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 193,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 192,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 191,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Row, {\n                      children: /*#__PURE__*/_jsxDEV(Col, {\n                        md: \"12\",\n                        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            children: \"Age\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 207,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Input, {\n                            type: \"text\",\n                            value: this.state.age,\n                            onChange: this.updateAge\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 208,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 206,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 205,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Row, {\n                      children: /*#__PURE__*/_jsxDEV(Col, {\n                        md: \"12\",\n                        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            children: \"ID Number\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 220,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Input, {\n                            type: \"text\",\n                            value: this.state.idNo,\n                            onChange: this.updateIdno\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 221,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 219,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 218,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Row, {\n                      children: /*#__PURE__*/_jsxDEV(Col, {\n                        md: \"12\",\n                        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            children: \"KRA Number\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 232,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Input, {\n                            type: \"text\",\n                            value: this.state.kraPin,\n                            onChange: this.updateKra\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 233,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 231,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 230,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 229,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Row, {\n                      children: /*#__PURE__*/_jsxDEV(Col, {\n                        md: \"12\",\n                        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            children: \"Owned Lands\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 244,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Input, {\n                            type: \"text\",\n                            value: this.state.landsOwned,\n                            onChange: this.updateOwnedLands\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 245,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 243,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 242,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: this.updateSeller,\n                    className: \"btn-fill\",\n                    color: \"primary\",\n                    children: \"Update\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default updateSeller;","map":{"version":3,"sources":["D:/BE COMP SS/Final Year Project/5/land2/land2/client/src/views/updateSeller.js"],"names":["LoadingContainer","DrizzleProvider","React","Component","Spinner","Button","Card","CardBody","CardFooter","CardHeader","Col","Form","FormGroup","Input","Row","Land","getWeb3","drizzleOptions","contracts","seller","sellerTable","verification","updateSeller","constructor","props","componentDidMount","window","location","hash","reload","web3","accounts","eth","getAccounts","currentAddress","currentProvider","selectedAddress","console","log","networkId","net","getId","deployedNetwork","networks","instance","Contract","abi","address","setState","LandInstance","account","seller_verify","state","methods","isVerified","call","not_verify","isRejected","push","getSellerDetails","name","age","idNo","kraPin","landsOwned","error","alert","length","Number","send","from","gas","then","response","history","updateName","event","target","value","updateAge","updateIdno","updateKra","updateOwnedLands","undefined","buyers","sellers","verified","render"],"mappings":"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","sourcesContent":["import {\r\n    LoadingContainer\r\n} from '@drizzle/react-components';\r\nimport { DrizzleProvider } from '@drizzle/react-plugin';\r\nimport React, { Component } from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport {\r\n    Button,\r\n    Card, CardBody,\r\n    CardFooter, CardHeader, Col, Form, FormGroup, Input,\r\n    Row\r\n} from \"reactstrap\";\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport Land from \"../artifacts/Land.json\";\r\nimport getWeb3 from \"../getWeb3\";\r\nimport '../index.css';\r\n\r\n\r\n\r\nconst drizzleOptions = {\r\n    contracts: [Land]\r\n}\r\n\r\n// var buyers = 0;\r\n// var sellers = 0;\r\nvar seller;\r\nvar sellerTable = [];\r\nvar verification = [];\r\n\r\nclass updateSeller extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            LandInstance: undefined,\r\n            account: null,\r\n            web3: null,\r\n            buyers: 0,\r\n            sellers: 0,\r\n            address: '',\r\n            name: '',\r\n            age: '',\r\n            idNo: '',\r\n            kraPin: '',\r\n            landsOwned: '',\r\n            isVerified: false,\r\n            verified: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        //For refreshing page only once\r\n        if (!window.location.hash) {\r\n            window.location = window.location + '#loaded';\r\n            window.location.reload();\r\n        }\r\n\r\n        try {\r\n            //Get network provider and web3 instance\r\n            const web3 = await getWeb3();\r\n\r\n            const accounts = await web3.eth.getAccounts();\r\n\r\n            const currentAddress = await web3.currentProvider.selectedAddress;\r\n            console.log(currentAddress);\r\n            const networkId = await web3.eth.net.getId();\r\n            const deployedNetwork = Land.networks[networkId];\r\n            const instance = new web3.eth.Contract(\r\n                Land.abi,\r\n                deployedNetwork && deployedNetwork.address,\r\n            );\r\n\r\n            this.setState({ LandInstance: instance, web3: web3, account: accounts[0] });\r\n            this.setState({ address: currentAddress });\r\n            var seller_verify = await this.state.LandInstance.methods.isVerified(currentAddress).call();\r\n            console.log(seller_verify);\r\n\r\n            var not_verify = await this.state.LandInstance.methods.isRejected(currentAddress).call();\r\n            console.log(not_verify);\r\n            if (seller_verify) {\r\n                verification.push(<p id=\"verified\">Verified <i class=\"fas fa-user-check\"></i></p>);\r\n            } else if (not_verify) {\r\n                verification.push(<p id=\"rejected\">Rejected <i class=\"fas fa-user-times\"></i></p>);\r\n            } else {\r\n                verification.push(<p id=\"unknown\">Not Yet Verified <i class=\"fas fa-user-cog\"></i></p>);\r\n            }\r\n\r\n            seller = await this.state.LandInstance.methods.getSellerDetails(currentAddress).call();\r\n            console.log(seller);\r\n            console.log(seller[0]);\r\n            this.setState({ name: seller[0], age: seller[1], idNo: seller[2], kraPin: seller[3], landsOwned: seller[4] });\r\n            //sellerTable.push(<div><p>Name: {seller[0]}</p><p>Age: {seller[1]}</p><p>ID Number: {seller[2]}</p><p>KRA Number: {seller[3]}</p><p>Owned Lands: {seller[4]}</p></div>);\r\n            sellerTable.push(\r\n                <Row>\r\n                    <Col md=\"12\">\r\n                        <FormGroup>\r\n                            <label>Your Wallet Address: </label>\r\n                            <Input\r\n                                disabled\r\n                                type=\"text\"\r\n                                value={currentAddress}\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n            );\r\n\r\n        } catch (error) {\r\n            // Catch any errors for any of the above operations.\r\n            alert(\r\n                `Failed to load web3, accounts, or contract. Check console for details.`,\r\n            );\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    updateSeller = async () => {\r\n        if (this.state.name === '' || this.state.age === '' || this.state.idNo === '' || this.state.kraPin === '' || this.state.landsOwned === '') {\r\n            alert(\"All the fields are compulsory!\");\r\n        } else if (this.state.idNo.length !== 12) {\r\n            alert(\"Aadhar Number should be 12 digits long!\");\r\n        } else if (this.state.kraPin.length !== 10) {\r\n            alert(\"Pan Card should be a 10 digit unique number!\");\r\n        } else if (!Number(this.state.age)) {\r\n            alert(\"Your age must be a number\");\r\n        } else {\r\n            await this.state.LandInstance.methods.updateSeller(\r\n                this.state.name,\r\n                this.state.age,\r\n                this.state.idNo,\r\n                this.state.kraPin,\r\n                this.state.landsOwned,\r\n            )\r\n                .send({\r\n                    from: this.state.address,\r\n                    gas: 2100000\r\n                }).then(response => {\r\n                    this.props.history.push(\"/Seller/sellerProfile\");\r\n                });\r\n\r\n            //Reload\r\n            window.location.reload(false);\r\n        }\r\n    }\r\n\r\n    updateName = event => (\r\n        this.setState({ name: event.target.value })\r\n    )\r\n    updateAge = event => (\r\n        this.setState({ age: event.target.value })\r\n    )\r\n    updateIdno = event => (\r\n        this.setState({ idNo: event.target.value })\r\n    )\r\n    updateKra = event => (\r\n        this.setState({ kraPin: event.target.value })\r\n    )\r\n    updateOwnedLands = event => (\r\n        this.setState({ landsOwned: event.target.value })\r\n    )\r\n\r\n    render() {\r\n        if (!this.state.web3) {\r\n            return (\r\n                <div>\r\n                    <div>\r\n                        <h1>\r\n                            <Spinner animation=\"border\" variant=\"primary\" />\r\n                        </h1>\r\n                    </div>\r\n\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"content\">\r\n                <DrizzleProvider options={drizzleOptions}>\r\n                    <LoadingContainer>\r\n                        <Row>\r\n                            <Col md=\"8\">\r\n                                <Card>\r\n                                    <CardHeader>\r\n                                        <h5 className=\"title\">Seller Profile</h5>\r\n                                        <h5 className=\"title\">{verification}</h5>\r\n\r\n                                    </CardHeader>\r\n                                    <CardBody>\r\n                                        <Form>\r\n                                            {sellerTable}\r\n                                            <Row>\r\n                                                <Col md=\"12\">\r\n                                                    <FormGroup>\r\n                                                        <label>Name</label>\r\n                                                        <Input\r\n                                                            type=\"text\"\r\n                                                            value={this.state.name}\r\n                                                            onChange={this.updateName}\r\n                                                        />\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n\r\n                                            </Row>\r\n                                            <Row>\r\n                                                <Col md=\"12\">\r\n                                                    <FormGroup>\r\n                                                        <label>Age</label>\r\n                                                        <Input\r\n                                                            type=\"text\"\r\n                                                            value={this.state.age}\r\n                                                            onChange={this.updateAge}\r\n                                                        />\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n\r\n                                            </Row>\r\n                                            <Row>\r\n                                                <Col md=\"12\">\r\n                                                    <FormGroup>\r\n                                                        <label>ID Number</label>\r\n                                                        <Input\r\n                                                            type=\"text\"\r\n                                                            value={this.state.idNo}\r\n                                                            onChange={this.updateIdno}\r\n                                                        />\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Row>\r\n                                                <Col md=\"12\">\r\n                                                    <FormGroup>\r\n                                                        <label>KRA Number</label>\r\n                                                        <Input\r\n                                                            type=\"text\"\r\n                                                            value={this.state.kraPin}\r\n                                                            onChange={this.updateKra}\r\n                                                        />\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Row>\r\n                                                <Col md=\"12\">\r\n                                                    <FormGroup>\r\n                                                        <label>Owned Lands</label>\r\n                                                        <Input\r\n                                                            type=\"text\"\r\n                                                            value={this.state.landsOwned}\r\n                                                            onChange={this.updateOwnedLands}\r\n                                                        />\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Form>\r\n                                    </CardBody>\r\n                                    <CardFooter>\r\n                                        <Button onClick={this.updateSeller} className=\"btn-fill\" color=\"primary\">\r\n                                            Update\r\n                                        </Button>\r\n                                    </CardFooter>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </LoadingContainer>\r\n                </DrizzleProvider>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default updateSeller;"]},"metadata":{},"sourceType":"module"}